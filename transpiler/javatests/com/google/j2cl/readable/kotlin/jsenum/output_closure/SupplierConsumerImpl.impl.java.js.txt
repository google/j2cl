goog.module('jsenum.SupplierConsumerImpl$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const Consumer = goog.require('jsenum.Consumer$impl');
const Supplier = goog.require('jsenum.Supplier$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

/**
 * @template T
 * @implements {Supplier<T>}
 * @implements {Consumer<T>}
 */
class SupplierConsumerImpl extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @template T @return {!SupplierConsumerImpl<T>} */
 static $create__() {
  SupplierConsumerImpl.$clinit();
  let $instance = new SupplierConsumerImpl();
  $instance.$ctor__jsenum_SupplierConsumerImpl__void();
  return $instance;
 }
 /** @nodts */
 $ctor__jsenum_SupplierConsumerImpl__void() {
  this.$ctor__java_lang_Object__void();
 }
 /** @override @nodts */
 m_accept__java_lang_Object__void(/** T */ t) {}
 /** @override @nodts @return {T} */
 m_get__java_lang_Object() {
  return /**@type {T}*/ (j_l_Object.$create__());
 }
 /** @nodts */
 static $clinit() {
  SupplierConsumerImpl.$clinit = () =>{};
  SupplierConsumerImpl.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof SupplierConsumerImpl;
 }
 
 /** @nodts */
 static $loadModules() {}
}
Supplier.$markImplementor(SupplierConsumerImpl);
Consumer.$markImplementor(SupplierConsumerImpl);
$Util.$setClassMetadata(SupplierConsumerImpl, 'jsenum.SupplierConsumerImpl');

exports = SupplierConsumerImpl;

//# sourceMappingURL=SupplierConsumerImpl.js.map
