// Generated from "j2kt/QualifierProjectionCastWithRecursiveType.java"
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "REDUNDANT_ELSE_IN_WHEN")

package j2kt

import javaemul.lang.*
import kotlin.String
import kotlin.Suppress
import kotlin.jvm.JvmStatic

open class QualifierProjectionCastWithRecursiveType {
 companion object {
  @JvmStatic
  fun test(foo: Foo<*>) {
   (foo as Foo<Foo<*>>).name(null)
  }
 }

 fun interface Foo<T: Foo<T>> {
  fun name(s: T?): String
 }
}
