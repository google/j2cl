goog.module('markimplementornativetypes.Foo$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const RegularInterface = goog.require('markimplementornativetypes.RegularInterface$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let MyNativeInterface = goog.forwardDeclare('test.foo.MyNativeInterface');

/**
 * @final
 * @implements {MyNativeInterface}
 * @implements {RegularInterface}
 */
class Foo extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @return {!Foo} */
 static $create__() {
  Foo.$clinit();
  let $instance = new Foo();
  $instance.$ctor__markimplementornativetypes_Foo__void();
  return $instance;
 }
 /** @nodts */
 $ctor__markimplementornativetypes_Foo__void() {
  this.$ctor__java_lang_Object__void();
 }
 /** @nodts */
 static $clinit() {
  Foo.$clinit = () =>{};
  Foo.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof Foo;
 }
 
 /** @nodts */
 static $loadModules() {}
}
RegularInterface.$markImplementor(Foo);
$Util.$setClassMetadata(Foo, 'markimplementornativetypes.Foo');

exports = Foo;

//# sourceMappingURL=Foo.js.map
