goog.module('genericmethod.GenericMethod.$1$impl');

const GenericMethod = goog.require('genericmethod.GenericMethod$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Error = goog.forwardDeclare('java.lang.Error$impl');

/**
 * @final
 * @template T, T_1
 * @extends {GenericMethod<T>}
 */
class $1 extends GenericMethod {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {!GenericMethod<T_1>} @nodts*/
  this.$outer_this__genericmethod_GenericMethod_1;
 }
 /** @nodts @template T, T_1 @return {!$1<T, T_1>} */
 static $create__genericmethod_GenericMethod(/** !GenericMethod<T_1> */ $outer_this) {
  $1.$clinit();
  let $instance = new $1();
  $instance.$ctor__genericmethod_GenericMethod_1__genericmethod_GenericMethod__void($outer_this);
  return $instance;
 }
 /** @nodts */
 $ctor__genericmethod_GenericMethod_1__genericmethod_GenericMethod__void(/** !GenericMethod<T_1> */ $outer_this) {
  this.$outer_this__genericmethod_GenericMethod_1 = $outer_this;
  this.$ctor__genericmethod_GenericMethod__void();
 }
 /** @final @nodts */
 m_fun2__java_lang_Error__void(/** T */ t) {}
 /** @final @nodts @template T_2 */
 m_fun2__java_lang_Object__void(/** T_2 */ t) {}
 /** @nodts */
 static $clinit() {
  $1.$clinit = () =>{};
  $1.$loadModules();
  GenericMethod.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof $1;
 }
 
 /** @nodts */
 static $loadModules() {}
}
$Util.$setClassMetadata($1, 'genericmethod.GenericMethod$1');

exports = $1;

//# sourceMappingURL=GenericMethod$1.js.map
