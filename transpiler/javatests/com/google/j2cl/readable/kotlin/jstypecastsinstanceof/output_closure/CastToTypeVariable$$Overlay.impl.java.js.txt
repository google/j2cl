goog.module('jstypecastsinstanceof.CastToTypeVariable.$Overlay$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let j_l_Object = goog.forwardDeclare('java.lang.Object$impl');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');

/** @nodts */
class $Overlay {
 /** @final @nodts @template T @return {T} */
 static m_setField__$devirt__jstypecastsinstanceof_CastToTypeVariable__int__boolean__jstypecastsinstanceof_CastToTypeVariable(/** !Object<string, T> */ $thisArg, /** number */ index, /** boolean */ value) {
  $Overlay.$clinit();
  let o = j_l_Object.$create__();
  let a = /**@type {!Array<T>}*/ ($Arrays.$castToNative(o));
  return /**@type {T}*/ ($thisArg);
 }
 /** @nodts */
 static $clinit() {
  $Overlay.$clinit = () =>{};
  $Overlay.$loadModules();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof Object;
 }
 
 /** @nodts */
 static $loadModules() {
  j_l_Object = goog.module.get('java.lang.Object$impl');
  $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
 }
}
$Util.$setClassMetadata($Overlay, 'Object');

exports = $Overlay;

//# sourceMappingURL=CastToTypeVariable$$Overlay.js.map
