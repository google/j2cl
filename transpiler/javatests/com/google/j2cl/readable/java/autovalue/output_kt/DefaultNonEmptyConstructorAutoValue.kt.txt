// Generated from "autovalue/DefaultNonEmptyConstructorAutoValue.java"
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "INCOMPATIBLE_OBJC_NAME_OVERRIDE",
 "REDUNDANT_ELSE_IN_WHEN")

package autovalue

import javaemul.lang.*
import javaemul.lang.annotations.WasAutoValue
import kotlin.Boolean
import kotlin.Int
import kotlin.Suppress
import kotlin.jvm.JvmStatic

@WasAutoValue
abstract class DefaultNonEmptyConstructorAutoValue {
 private val field: Int

 internal constructor() {
  this.field = 1
 }

 abstract fun getBooleanField(): Boolean

 companion object {
  @JvmStatic
  internal fun create_pp_autovalue(): DefaultNonEmptyConstructorAutoValue? {
   return autovalue.AutoValue_DefaultNonEmptyConstructorAutoValue.Builder().setBooleanField(true)!!.build()
  }
 }

 @javaemul.lang.annotations.WasAutoValue.Builder
 abstract class Builder {
  private val field: Int

  internal constructor() {
   this.field = 1
  }

  abstract fun setBooleanField(x: Boolean): Builder?

  abstract fun build(): DefaultNonEmptyConstructorAutoValue?
 }
}
