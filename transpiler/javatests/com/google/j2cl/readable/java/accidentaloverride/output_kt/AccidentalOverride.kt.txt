// Generated from "accidentaloverride/AccidentalOverride.java"
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "INCOMPATIBLE_OBJC_NAME_OVERRIDE",
 "REDUNDANT_ELSE_IN_WHEN")

package accidentaloverride

import javaemul.lang.*
import kotlin.AssertionError
import kotlin.Error
import kotlin.Suppress

open class Parent<T: Error?> internal constructor() {
 open fun foo(e: T) {}

 fun bar(e: T) {}
}

interface SuperInterface<T> {
 fun foo(t: T)

 fun bar(e: T)
}

open class AnotherAccidentalOverride internal constructor(): Parent<AssertionError?>(), SuperInterface<AssertionError?>

open class AccidentalOverride: Parent<Error?>(), SuperInterface<Error?>
