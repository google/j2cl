// Generated from "abstractmethodoverridedefault/AbstractMethodOverrideDefault.java"
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "INCOMPATIBLE_OBJC_NAME_OVERRIDE",
 "REDUNDANT_ELSE_IN_WHEN")

package abstractmethodoverridedefault

import javaemul.lang.*
import kotlin.Suppress

open class AbstractMethodOverrideDefault {
 fun interface I {
  fun foo()

  fun bar() {}
 }

 fun interface J {
  fun foo() {}

  fun bar()
 }

 abstract class A internal constructor(): I {
  abstract override fun foo()
 }

 abstract class B internal constructor(): A(), J {
  override fun bar() {
   if (false) {
    this.bar()
   }
  }

  abstract override fun foo()
 }

 open class C internal constructor(): A() {
  override fun foo() {}

  override fun bar() {
   super<A>.bar()
  }
 }
}
