goog.module('variance.Bounded$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let CharSequence = goog.forwardDeclare('java.lang.CharSequence$impl');
let Container = goog.forwardDeclare('variance.Container$impl');

/**
 * @interface
 * @template T
 */
class Bounded {
 /** @abstract @nodts @return {T} */
 m_m__java_lang_CharSequence__java_lang_CharSequence(/** T */ t) {}
 /** @abstract @nodts @return {!Container<T>} */
 m_mList__variance_Container__variance_Container(/** !Container<T> */ c) {}
 /** @nodts */
 static $clinit() {
  Bounded.$clinit = () =>{};
  Bounded.$loadModules();
 }
 
 static $markImplementor(/** Function */ ctor) {
  ctor.prototype.$implements__variance_Bounded = true;
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance != null && !!instance.$implements__variance_Bounded;
 }
 
 /** @nodts */
 static $loadModules() {}
}
Bounded.$markImplementor(/**@type {Function}*/ (Bounded));
$Util.$setClassMetadataForInterface(/**@type {Function}*/ (Bounded), 'variance.Bounded');

exports = Bounded;

//# sourceMappingURL=Bounded.js.map
