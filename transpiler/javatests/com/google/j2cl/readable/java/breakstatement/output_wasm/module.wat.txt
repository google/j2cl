;;; Code for breakstatement.BreakStatement [type definition]
(type $breakstatement.BreakStatement (sub $java.lang.Object (struct
 (field $vtable (ref $breakstatement.BreakStatement.vtable))
 (field $itable (ref $itable))
 (field $$systemIdentityHashCode@java.lang.Object (mut i32))
 ))
)
(type $breakstatement.BreakStatement.vtable (sub $java.lang.Object.vtable (struct
 (field $$getClassImpl__java_lang_Class (ref $function.$getClassImpl__java_lang_Class))
 (field $m_equals__java_lang_Object__boolean (ref $function.m_equals__java_lang_Object__boolean))
 (field $m_hashCode__int (ref $function.m_hashCode__int))
 (field $m_toString__java_lang_String (ref $function.m_toString__java_lang_String))
 (field $m_test__void (ref $function.m_test__void))
 ))
)

;;; Code for breakstatement.BreakStatement [imports]

;;; Code for breakstatement.BreakStatement [static fields]
(global $$class-initialized@breakstatement.BreakStatement (mut i32)
 (i32.const 0)
)
(global $$class@breakstatement.BreakStatement (mut (ref null $java.lang.Class))
 (ref.null $java.lang.Class)
)

;;; Code for breakstatement.BreakStatement [vtable.init]
(global $breakstatement.BreakStatement.vtable (ref $breakstatement.BreakStatement.vtable)
 (struct.new $breakstatement.BreakStatement.vtable
  (ref.func $$getClassImpl__java_lang_Class@breakstatement.BreakStatement)
  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
  (ref.func $m_hashCode__int@java.lang.Object)
  (ref.func $m_toString__java_lang_String@java.lang.Object)
  (ref.func $m_test__void@breakstatement.BreakStatement)
 )
)

;;; Code for breakstatement.BreakStatement [methods]

;;; BreakStatement BreakStatement.$create()
(func $$create__@breakstatement.BreakStatement
 (result (ref null $breakstatement.BreakStatement))
 ;;@ transpiler/javatests/com/google/j2cl/readable/java/breakstatement/readable-j2wasm.js/breakstatement/BreakStatement.java:18:13
 (local $$instance (ref null $breakstatement.BreakStatement))
 (block
  ;;@ transpiler/javatests/com/google/j2cl/readable/java/breakstatement/readable-j2wasm.js/breakstatement/BreakStatement.java:18:13
  (call $$clinit__void_<once>_@breakstatement.BreakStatement )
  ;;@ transpiler/javatests/com/google/j2cl/readable/java/breakstatement/readable-j2wasm.js/breakstatement/BreakStatement.java:18:13
  (local.set $$instance (struct.new $breakstatement.BreakStatement (global.get $breakstatement.BreakStatement.vtable) (global.get $itable.empty) (i32.const 0)))
  ;;@ transpiler/javatests/com/google/j2cl/readable/java/breakstatement/readable-j2wasm.js/breakstatement/BreakStatement.java:18:13
  (call $$ctor__void_$p_breakstatement_BreakStatement@breakstatement.BreakStatement (ref.as_non_null (local.get $$instance)))
  ;;@ transpiler/javatests/com/google/j2cl/readable/java/breakstatement/readable-j2wasm.js/breakstatement/BreakStatement.java:18:13
  (return (local.get $$instance))
 )
)

;;; void BreakStatement.$ctor()
(func $$ctor__void_$p_breakstatement_BreakStatement@breakstatement.BreakStatement
 (param $this (ref null $breakstatement.BreakStatement))
 ;;@ transpiler/javatests/com/google/j2cl/readable/java/breakstatement/readable-j2wasm.js/breakstatement/BreakStatement.java:18:13
 (block
  ;;@ transpiler/javatests/com/google/j2cl/readable/java/breakstatement/readable-j2wasm.js/breakstatement/BreakStatement.java:18:13
  (call $$ctor__void_$p_java_lang_Object@java.lang.Object (ref.as_non_null (local.get $this)))
 )
)

;;; void BreakStatement.test()
(func $m_test__void@breakstatement.BreakStatement
 (type $function.m_test__void)
 (param $this.untyped (ref $java.lang.Object))
 ;;@ transpiler/javatests/com/google/j2cl/readable/java/breakstatement/readable-j2wasm.js/breakstatement/BreakStatement.java:19:14
 (local $this (ref null $breakstatement.BreakStatement))
 (local.set $this (ref.cast (ref $breakstatement.BreakStatement) (local.get $this.untyped)))
 (block
  ;;@ transpiler/javatests/com/google/j2cl/readable/java/breakstatement/readable-j2wasm.js/breakstatement/BreakStatement.java:20:4
  (block $LOOP.BREAK
   (loop
    (block $LOOP.CONTINUE
     (block
      ;;@ transpiler/javatests/com/google/j2cl/readable/java/breakstatement/readable-j2wasm.js/breakstatement/BreakStatement.java:21:6
      (br $LOOP.BREAK)
     )
    )
    (br 0)
   )
  )
 )
)
(elem declare func $m_test__void@breakstatement.BreakStatement)

;;; void BreakStatement.$clinit()
(func $$clinit__void_<once>_@breakstatement.BreakStatement
 ;;@ transpiler/javatests/com/google/j2cl/readable/java/breakstatement/readable-j2wasm.js/breakstatement/BreakStatement.java:18:13
 (block
  ;;@ transpiler/javatests/com/google/j2cl/readable/java/breakstatement/readable-j2wasm.js/breakstatement/BreakStatement.java:18:13
  (if (global.get $$class-initialized@breakstatement.BreakStatement)
   (then
    ;;@ transpiler/javatests/com/google/j2cl/readable/java/breakstatement/readable-j2wasm.js/breakstatement/BreakStatement.java:18:13
    (return )
   )
  )
  ;;@ transpiler/javatests/com/google/j2cl/readable/java/breakstatement/readable-j2wasm.js/breakstatement/BreakStatement.java:18:13
  (global.set $$class-initialized@breakstatement.BreakStatement (i32.const 1))
  ;;@ transpiler/javatests/com/google/j2cl/readable/java/breakstatement/readable-j2wasm.js/breakstatement/BreakStatement.java:18:13
  (call $$clinit__void_<once>_@java.lang.Object )
 )
)

;;; Class<T> BreakStatement.$getClassMetadata()
(func $$getClassMetadata__java_lang_Class_<once>_@breakstatement.BreakStatement
 (result (ref null $java.lang.Class))
 (block
  (if (i32.eqz (ref.is_null (global.get $$class@breakstatement.BreakStatement)))
   (then
    (return (global.get $$class@breakstatement.BreakStatement))
   )
  )
  (global.set $$class@breakstatement.BreakStatement (call $m_createForClass__java_lang_String__java_lang_Class__java_lang_Class@java.lang.Class (call $$getString_|breakstateme...|__java_lang_String_<once>_@breakstatement.BreakStatement )(call $$getClassMetadata__java_lang_Class_<once>_@java.lang.Object )))
  (return (global.get $$class@breakstatement.BreakStatement))
 )
)

;;; Class<?> BreakStatement.$getClassImpl()
(func $$getClassImpl__java_lang_Class@breakstatement.BreakStatement
 (type $function.$getClassImpl__java_lang_Class)
 (param $this.untyped (ref $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $breakstatement.BreakStatement))
 (local.set $this (ref.cast (ref $breakstatement.BreakStatement) (local.get $this.untyped)))
 (block
  (return (call $$getClassMetadata__java_lang_Class_<once>_@breakstatement.BreakStatement ))
 )
)
(elem declare func $$getClassImpl__java_lang_Class@breakstatement.BreakStatement)
