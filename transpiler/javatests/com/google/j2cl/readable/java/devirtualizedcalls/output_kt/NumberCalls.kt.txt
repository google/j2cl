// Generated from "devirtualizedcalls/NumberCalls.java"
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "INCOMPATIBLE_OBJC_NAME_OVERRIDE",
 "REDUNDANT_ELSE_IN_WHEN")

package devirtualizedcalls

import javaemul.lang.*
import kotlin.Boolean
import kotlin.Byte
import kotlin.Char
import kotlin.Double
import kotlin.Float
import kotlin.Int
import kotlin.Long
import kotlin.Number
import kotlin.Short
import kotlin.Suppress

open class NumberCalls {
 open fun main() {
  val i: Number = Int(1)
  i.toByte()
  i.toDouble()
  i.toFloat()
  i.toInt()
  i.toLong()
  i.toShort()
  val ii: Int? = Int(1)
  ii!!.toByte()
  ii!!.toDouble()
  ii!!.toFloat()
  ii!!.toInt()
  ii!!.toLong()
  ii!!.toShort()
  val d: Number = Double(1.1)
  d.toByte()
  d.toDouble()
  d.toFloat()
  d.toInt()
  d.toLong()
  d.toShort()
  val dd: Double? = Double(1.1)
  dd!!.toInt_toByte()
  dd!!.toDouble()
  dd!!.toFloat()
  dd!!.toInt()
  dd!!.toLong()
  dd!!.toInt_toShort()
  val s: Number = Short(
   1.toShort(),
  )
  s.toByte()
  s.toDouble()
  s.toFloat()
  s.toInt()
  s.toLong()
  s.toShort()
  val ss: Short? = Short(
   1.toShort(),
  )
  ss!!.toByte()
  ss!!.toDouble()
  ss!!.toFloat()
  ss!!.toInt()
  ss!!.toLong()
  ss!!.toShort()
  val b: Number = Byte(
   1.toByte(),
  )
  b.toByte()
  b.toDouble()
  b.toFloat()
  b.toInt()
  b.toLong()
  b.toShort()
  val bb: Byte? = Byte(
   1.toByte(),
  )
  bb!!.toByte()
  bb!!.toDouble()
  bb!!.toFloat()
  bb!!.toInt()
  bb!!.toLong()
  bb!!.toShort()
  val f: Number = Float(1.1f)
  f.toByte()
  f.toDouble()
  f.toFloat()
  f.toInt()
  f.toLong()
  f.toShort()
  val ff: Float? = Float(1.1f)
  ff!!.toInt_toByte()
  ff!!.toDouble()
  ff!!.toFloat()
  ff!!.toInt()
  ff!!.toLong()
  ff!!.toInt_toShort()
  val l: Number = Long(1L)
  l.toByte()
  l.toDouble()
  l.toFloat()
  l.toInt()
  l.toLong()
  l.toShort()
  val ll: Long? = Long(1L)
  ll!!.toByte()
  ll!!.toDouble()
  ll!!.toFloat()
  ll!!.toInt()
  ll!!.toLong()
  ll!!.toShort()
  val c: Char? = Char('a')
  c!!.toChar()
  val bool: Boolean? = Boolean(true)
  bool!!.booleanValue()
 }
}
