// Generated from "j2kt/MethodReference.java"
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "INCOMPATIBLE_OBJC_NAME_OVERRIDE",
 "REDUNDANT_ELSE_IN_WHEN")

package j2kt

import javaemul.lang.*
import kotlin.Suppress
import kotlin.jvm.JvmStatic

class MethodReference internal constructor() {
 companion object {
  @JvmStatic
  internal fun <T> foo_pp_j2kt(inputs: Foo<out Foo<out T>>) {
   MethodReference.transform_pp_j2kt(
    inputs,
    object : Function<Foo<out T>, Foo<out T>> {
     override fun <H> apply(arg0: Foo<out T>): Foo<out T> {
      return arg0.bar()
     }
    },
   )
  }

  @JvmStatic
  internal fun <F, T> transform_pp_j2kt(foo: Foo<F>, function: Function<in F, out T>) {}
 }

 interface Function<T, R> {
  fun <H> apply(t: T): R
 }

 fun interface Foo<T> {
  fun bar(): Foo<T>
 }
}
