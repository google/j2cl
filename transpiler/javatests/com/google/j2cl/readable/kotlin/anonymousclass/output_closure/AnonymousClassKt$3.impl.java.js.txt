goog.module('anonymousclass.AnonymousClassKt.$3$impl');

const Foo = goog.require('anonymousclass.Foo$impl');
const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $1 = goog.forwardDeclare('anonymousclass.AnonymousClassKt.$3.$1$impl');

/**
 * @final
 * @implements {Foo}
 */
class $3 extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @return {!$3} */
 static $create__() {
  $3.$clinit();
  let $instance = new $3();
  $instance.$ctor__anonymousclass_AnonymousClassKt_3__void();
  return $instance;
 }
 /** @nodts */
 $ctor__anonymousclass_AnonymousClassKt_3__void() {
  this.$ctor__java_lang_Object__void();
 }
 /** @nodts @return {!$1} */
 m_returnAny__anonymousclass_AnonymousClassKt_3_1() {
  return $1.$create__anonymousclass_AnonymousClassKt_3(this);
 }
 //Bridge method.
 /** @final @override @nodts @suppress{visibility} @return {!$1} */
 m_returnAny__java_lang_Object() {
  return this.m_returnAny__anonymousclass_AnonymousClassKt_3_1();
 }
 /** @nodts */
 static $clinit() {
  $3.$clinit = () =>{};
  $3.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof $3;
 }
 
 /** @nodts */
 static $loadModules() {
  $1 = goog.module.get('anonymousclass.AnonymousClassKt.$3.$1$impl');
 }
}
Foo.$markImplementor($3);
$Util.$setClassMetadata($3, 'anonymousclass.AnonymousClassKt$3');

exports = $3;

//# sourceMappingURL=AnonymousClassKt$3.js.map
