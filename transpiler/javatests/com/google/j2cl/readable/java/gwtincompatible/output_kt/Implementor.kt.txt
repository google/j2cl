// Generated from "gwtincompatible/Implementor.java"
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "INCOMPATIBLE_OBJC_NAME_OVERRIDE",
 "REDUNDANT_ELSE_IN_WHEN")

package gwtincompatible

import javaemul.lang.*
import gwtincompatible.Interface
import gwtincompatible.Interface.ClassWithAbstractMethod
import gwtincompatible.Interface.NestedInterface
import kotlin.Int
import kotlin.Suppress

open class Implementor: ClassWithAbstractMethod(), Interface, NestedInterface {
 override fun incompatible() {}

 override fun nestedIncompatible() {}

 override fun incompatibleFromClass() {}

 open fun compatibleMethod() {
  val a: Int = 4
 }

 enum class SomeEnum {
  COMPATIBLE {
   override fun method_pp_gwtincompatible() {}
  },
  INCOMPATIBLE {
   override fun method_pp_gwtincompatible() {}
  };

  internal abstract fun method_pp_gwtincompatible()
 }
}
