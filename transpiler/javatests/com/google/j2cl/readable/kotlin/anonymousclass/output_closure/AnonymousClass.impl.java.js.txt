goog.module('anonymousclass.AnonymousClass$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $1 = goog.forwardDeclare('anonymousclass.AnonymousClass.$1$impl');
let $2 = goog.forwardDeclare('anonymousclass.AnonymousClass.$2$impl');
let $3 = goog.forwardDeclare('anonymousclass.AnonymousClass.$3$impl');
let Ref = goog.forwardDeclare('javaemul.internal.Ref$impl');

/**
 * @final
 */
class AnonymousClass extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {number} @nodts*/
  this.f_i__anonymousclass_AnonymousClass_ = 0;
  /**@type {!*} @nodts*/
  this.f_o__anonymousclass_AnonymousClass_;
 }
 /** @final @nodts @return {number} */
 m_getI__int() {
  return this.f_i__anonymousclass_AnonymousClass_;
 }
 /** @final @nodts */
 m_setI__int__void(/** number */ set__) {
  this.f_i__anonymousclass_AnonymousClass_ = set__;
 }
 /** @final @nodts @return {!*} */
 m_getO__java_lang_Object() {
  return this.f_o__anonymousclass_AnonymousClass_;
 }
 /** @final @nodts */
 m_setO__java_lang_Object__void(/** !* */ set__) {
  this.f_o__anonymousclass_AnonymousClass_ = set__;
 }
 /** @nodts @return {!AnonymousClass} */
 static $create__java_lang_Object(/** !* */ a) {
  AnonymousClass.$clinit();
  let $instance = new AnonymousClass();
  $instance.$ctor__anonymousclass_AnonymousClass__java_lang_Object__void(a);
  return $instance;
 }
 /** @nodts */
 $ctor__anonymousclass_AnonymousClass__java_lang_Object__void(/** !* */ a) {
  this.$ctor__java_lang_Object__void();
  this.m_setO__java_lang_Object__void($1.$create__anonymousclass_AnonymousClass__java_lang_Object(this, a));
 }
 /** @final @nodts */
 m_main__void() {
  let capturedVar = Ref.m_createRef__int__javaemul_internal_Ref_OfInt(1);
  let instance = $2.$create__anonymousclass_AnonymousClass__javaemul_internal_Ref_OfInt(this, capturedVar);
  let unary = capturedVar.f_element__javaemul_internal_Ref_OfInt;
  capturedVar.f_element__javaemul_internal_Ref_OfInt = unary + 1 | 0;
  let instanceWithStaticMembers = $3.$create__anonymousclass_AnonymousClass(this);
 }
 /** @nodts */
 static $clinit() {
  AnonymousClass.$clinit = () =>{};
  AnonymousClass.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof AnonymousClass;
 }
 
 /** @nodts */
 static $loadModules() {
  $1 = goog.module.get('anonymousclass.AnonymousClass.$1$impl');
  $2 = goog.module.get('anonymousclass.AnonymousClass.$2$impl');
  $3 = goog.module.get('anonymousclass.AnonymousClass.$3$impl');
  Ref = goog.module.get('javaemul.internal.Ref$impl');
 }
}
$Util.$setClassMetadata(AnonymousClass, 'anonymousclass.AnonymousClass');

exports = AnonymousClass;

//# sourceMappingURL=AnonymousClass.js.map
