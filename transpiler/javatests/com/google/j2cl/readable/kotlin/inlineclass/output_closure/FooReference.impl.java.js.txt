goog.module('inlineclass.FooReference$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let j_l_String = goog.forwardDeclare('java.lang.String$impl');
let $Equality = goog.forwardDeclare('nativebootstrap.Equality$impl');
let $Objects = goog.forwardDeclare('vmbootstrap.Objects$impl');

/**
 * @final
 */
class FooReference extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {string} @nodts*/
  this.f_s__inlineclass_FooReference_;
 }
 /** @nodts @return {!FooReference} */
 static $create__java_lang_String(/** string */ s) {
  FooReference.$clinit();
  let $instance = new FooReference();
  $instance.$ctor__inlineclass_FooReference__java_lang_String__void(s);
  return $instance;
 }
 /** @nodts */
 $ctor__inlineclass_FooReference__java_lang_String__void(/** string */ s) {
  this.$ctor__java_lang_Object__void();
  this.f_s__inlineclass_FooReference_ = s;
 }
 /** @final @nodts @return {string} */
 m_getS__java_lang_String() {
  return this.f_s__inlineclass_FooReference_;
 }
 /** @override @return {string} */
 toString() {
  return '' + 'FooReference(' + 's=' + j_l_String.m_valueOf__java_lang_Object__java_lang_String(this.f_s__inlineclass_FooReference_) + ')';
 }
 /** @override @return {number} */
 hashCode() {
  return $Objects.m_hashCode__java_lang_Object__int(this.f_s__inlineclass_FooReference_);
 }
 /** @override @return {boolean} */
 equals(/** * */ other) {
  if (!FooReference.$isInstance(other)) {
   return false;
  }
  let tmp0_other_with_cast = /**@type {!FooReference}*/ (other);
  if (!$Equality.$same(this.f_s__inlineclass_FooReference_, tmp0_other_with_cast.f_s__inlineclass_FooReference_)) {
   return false;
  }
  return true;
 }
 /** @nodts */
 static $clinit() {
  FooReference.$clinit = () =>{};
  FooReference.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof FooReference;
 }
 
 /** @nodts */
 static $loadModules() {
  j_l_String = goog.module.get('java.lang.String$impl');
  $Equality = goog.module.get('nativebootstrap.Equality$impl');
  $Objects = goog.module.get('vmbootstrap.Objects$impl');
 }
}
$Util.$setClassMetadata(FooReference, 'inlineclass.FooReference');

exports = FooReference;

//# sourceMappingURL=FooReference.js.map
