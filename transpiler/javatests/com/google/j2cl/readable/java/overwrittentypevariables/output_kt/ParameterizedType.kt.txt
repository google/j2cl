// Generated from "overwrittentypevariables/ParameterizedType.java"
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "INCOMPATIBLE_OBJC_NAME_OVERRIDE",
 "REDUNDANT_ELSE_IN_WHEN")

package overwrittentypevariables

import javaemul.lang.*
import kotlin.Int
import kotlin.String
import kotlin.Suppress

fun interface ParameterizedType<F, T>: overwrittentypevariables.otherpkg.ParameterizedType<F, T> {
 override fun accept(value: F): T
}

open class ParameterizedTypeImpl internal constructor(): ParameterizedType<String?, Int?> {
 override fun accept(value: String?): Int? {
  return 1
 }
}
