goog.module('inlineclass.Foo$impl');

const I = goog.require('inlineclass.I$impl');
const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Integer = goog.forwardDeclare('java.lang.Integer$impl');
let $Objects = goog.forwardDeclare('vmbootstrap.Objects$impl');

/**
 * @final
 * @implements {I}
 */
class Foo extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {number} @nodts*/
  this.f_i__inlineclass_Foo_ = 0;
 }
 /** @nodts @return {!Foo} */
 static $create__int(/** number */ i) {
  Foo.$clinit();
  let $instance = new Foo();
  $instance.$ctor__inlineclass_Foo__int__void(i);
  return $instance;
 }
 /** @nodts */
 $ctor__inlineclass_Foo__int__void(/** number */ i) {
  this.$ctor__java_lang_Object__void();
  this.f_i__inlineclass_Foo_ = i;
 }
 /** @override @nodts @return {number} */
 m_getI__int() {
  return this.f_i__inlineclass_Foo_;
 }
 /** @final @nodts @return {number} */
 m_getJ__int() {
  return this.m_getI__int();
 }
 /** @final @nodts @return {!Foo} */
 m_plusOne_gKL6fWI__inlineclass_Foo() {
  return Foo.$create__int(this.m_getI__int() + 1 | 0);
 }
 /** @final @nodts @return {!Foo} */
 m_plus_kt_6ZRQ__inlineclass_Foo__inlineclass_Foo(/** !Foo */ other) {
  return Foo.$create__int(this.m_getI__int() + other.m_getI__int() | 0);
 }
 /** @override @return {string} */
 toString() {
  return '' + 'Foo(' + 'i=' + this.f_i__inlineclass_Foo_ + ')';
 }
 /** @override @return {number} */
 hashCode() {
  return $Objects.m_hashCode__java_lang_Object__int(Integer.valueOf(this.f_i__inlineclass_Foo_));
 }
 /** @override @return {boolean} */
 equals(/** * */ other) {
  if (!Foo.$isInstance(other)) {
   return false;
  }
  let tmp0_other_with_cast = /**@type {!Foo}*/ (other);
  if (this.f_i__inlineclass_Foo_ != tmp0_other_with_cast.f_i__inlineclass_Foo_) {
   return false;
  }
  return true;
 }
 /** @nodts */
 static $clinit() {
  Foo.$clinit = () =>{};
  Foo.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof Foo;
 }
 
 /** @nodts */
 static $loadModules() {
  Integer = goog.module.get('java.lang.Integer$impl');
  $Objects = goog.module.get('vmbootstrap.Objects$impl');
 }
}
I.$markImplementor(Foo);
$Util.$setClassMetadata(Foo, 'inlineclass.Foo');

exports = Foo;

//# sourceMappingURL=Foo.js.map
