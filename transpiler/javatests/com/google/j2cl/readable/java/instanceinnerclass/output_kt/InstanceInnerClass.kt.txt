// Generated from "instanceinnerclass/InstanceInnerClass.java"
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "INCOMPATIBLE_OBJC_NAME_OVERRIDE",
 "REDUNDANT_ELSE_IN_WHEN")

package instanceinnerclass

import javaemul.lang.*
import kotlin.Int
import kotlin.Suppress
import kotlin.jvm.JvmField

open class InstanceInnerClass {
 @JvmField
 var instanceField: Int = 0

 open fun funOuter() {}

 open fun test() {
  InstanceInnerClass().InnerClass()
 }

 open inner class InnerClass {
  @JvmField
  var field: Int = this@InstanceInnerClass.instanceField + this@InstanceInnerClass.instanceField

  @JvmField
  var enclosingInstance: InstanceInnerClass? = this@InstanceInnerClass

  open fun funInner() {
   this@InstanceInnerClass.funOuter()
   this@InstanceInnerClass.funOuter()
  }
 }
}
