goog.module('bridgejsmethod.Main.GrandParent$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Main = goog.forwardDeclare('bridgejsmethod.Main$impl');

/**
 * @template T
 */
class GrandParent extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {!Main} @nodts*/
  this.$outer_this__bridgejsmethod_Main_GrandParent;
 }
 /** @nodts @template T @return {!GrandParent<T>} */
 static $create__bridgejsmethod_Main(/** !Main */ $outer_this) {
  GrandParent.$clinit();
  let $instance = new GrandParent();
  $instance.$ctor__bridgejsmethod_Main_GrandParent__bridgejsmethod_Main__void($outer_this);
  return $instance;
 }
 /** @nodts */
 $ctor__bridgejsmethod_Main_GrandParent__bridgejsmethod_Main__void(/** !Main */ $outer_this) {
  this.$outer_this__bridgejsmethod_Main_GrandParent = $outer_this;
  this.$ctor__java_lang_Object__void();
 }
 
 jsMethod(/** T */ t) {}
 /** @nodts */
 m_method__java_lang_Object__void(/** T */ t) {}
 /** @nodts */
 static $clinit() {
  GrandParent.$clinit = () =>{};
  GrandParent.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof GrandParent;
 }
 
 /** @nodts */
 static $loadModules() {}
}
$Util.$setClassMetadata(GrandParent, 'bridgejsmethod.Main$GrandParent');

exports = GrandParent;

//# sourceMappingURL=Main$GrandParent.js.map
