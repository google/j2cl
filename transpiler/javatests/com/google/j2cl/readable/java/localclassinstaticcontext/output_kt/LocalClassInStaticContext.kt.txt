// Generated from "localclassinstaticcontext/LocalClassInStaticContext.java"
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "INCOMPATIBLE_OBJC_NAME_OVERRIDE",
 "REDUNDANT_ELSE_IN_WHEN")

package localclassinstaticcontext

import javaemul.lang.*
import kotlin.Any
import kotlin.Int
import kotlin.Suppress
import kotlin.jvm.JvmField
import kotlin.jvm.JvmStatic

open class LocalClassInStaticContext {
 companion object {
  @JvmField
  var f: Any? = object : Any() {}

  @JvmStatic
  fun test() {
   open class A internal constructor()
   A()
   val a: Any = object : Any() {
    internal fun m_pp_localclassinstaticcontext() {
     A()
    }
   }
  }

  init {
   open class B internal constructor()
   B()
   val b: Any = object : Any() {}
  }
 }

 open class C {
  @JvmField
  var f: Int = 1

  open fun test() {
   open class D internal constructor() {
    open fun `fun`(): Int {
     return this@C.f
    }
   }
   D().`fun`()
  }
 }
}
