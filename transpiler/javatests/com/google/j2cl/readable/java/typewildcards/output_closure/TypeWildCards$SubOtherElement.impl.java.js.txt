goog.module('typewildcards.TypeWildCards.SubOtherElement$impl');

const $Util = goog.require('nativebootstrap.Util$impl');
const HasKey = goog.require('typewildcards.TypeWildCards.HasKey$impl');
const OtherElement = goog.require('typewildcards.TypeWildCards.OtherElement$impl');

let Integer = goog.forwardDeclare('java.lang.Integer$impl');
let TypeWildCards = goog.forwardDeclare('typewildcards.TypeWildCards$impl');

/**
 * @abstract
 * @implements {HasKey}
 */
class SubOtherElement extends OtherElement {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {!TypeWildCards} @nodts*/
  this.$outer_this__typewildcards_TypeWildCards_SubOtherElement;
 }
 /** @nodts */
 $ctor__typewildcards_TypeWildCards_SubOtherElement__typewildcards_TypeWildCards__void(/** !TypeWildCards */ $outer_this) {
  this.$outer_this__typewildcards_TypeWildCards_SubOtherElement = $outer_this;
  this.$ctor__typewildcards_TypeWildCards_OtherElement__typewildcards_TypeWildCards__void($outer_this);
 }
 /** @nodts */
 static $clinit() {
  SubOtherElement.$clinit = () =>{};
  SubOtherElement.$loadModules();
  OtherElement.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof SubOtherElement;
 }
 /** @abstract @override @nodts @return {?string} */
 m_getKey__java_lang_String() {}
 /** @abstract @override @nodts @return {Integer} */
 m_get__java_lang_Integer() {}
 
 /** @nodts */
 static $loadModules() {}
}
HasKey.$markImplementor(SubOtherElement);
$Util.$setClassMetadata(SubOtherElement, 'typewildcards.TypeWildCards$SubOtherElement');

exports = SubOtherElement;

//# sourceMappingURL=TypeWildCards$SubOtherElement.js.map
