goog.module('arithmeticexpressions.ArithmeticExpressions.$1Ref$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let ArithmeticExpressions = goog.forwardDeclare('arithmeticexpressions.ArithmeticExpressions$impl');

/**
 * @template T
 */
class $1Ref extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {!ArithmeticExpressions} @nodts*/
  this.$outer_this__arithmeticexpressions_ArithmeticExpressions_1Ref;
  /**@type {?T} @nodts*/
  this.f_field__arithmeticexpressions_ArithmeticExpressions_1Ref;
 }
 /** @nodts @template T @return {!$1Ref<T>} */
 static $create__arithmeticexpressions_ArithmeticExpressions(/** !ArithmeticExpressions */ $outer_this) {
  $1Ref.$clinit();
  let $instance = new $1Ref();
  $instance.$ctor__arithmeticexpressions_ArithmeticExpressions_1Ref__arithmeticexpressions_ArithmeticExpressions__void($outer_this);
  return $instance;
 }
 /** @nodts */
 $ctor__arithmeticexpressions_ArithmeticExpressions_1Ref__arithmeticexpressions_ArithmeticExpressions__void(/** !ArithmeticExpressions */ $outer_this) {
  this.$outer_this__arithmeticexpressions_ArithmeticExpressions_1Ref = $outer_this;
  this.$ctor__java_lang_Object__void();
 }
 /** @nodts */
 static $clinit() {
  $1Ref.$clinit = () =>{};
  $1Ref.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof $1Ref;
 }
 
 /** @nodts */
 static $loadModules() {}
}
$Util.$setClassMetadata($1Ref, 'arithmeticexpressions.ArithmeticExpressions$1Ref');

exports = $1Ref;

//# sourceMappingURL=ArithmeticExpressions$1Ref.js.map
