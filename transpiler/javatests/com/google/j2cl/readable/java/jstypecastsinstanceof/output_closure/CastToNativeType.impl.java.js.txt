goog.module('jstypecastsinstanceof.CastToNativeType$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $Overlay = goog.forwardDeclare('jstypecastsinstanceof.CastToNativeType.NativeJsType.$Overlay$impl');
let NativeObject_$Overlay = goog.forwardDeclare('jstypecastsinstanceof.CastToNativeType.NativeObject.$Overlay$impl');
let NativeJsType = goog.forwardDeclare('test.foo.NativeJsType');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');

class CastToNativeType extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @return {!CastToNativeType} */
 static $create__() {
  CastToNativeType.$clinit();
  let $instance = new CastToNativeType();
  $instance.$ctor__jstypecastsinstanceof_CastToNativeType__void();
  return $instance;
 }
 /** @nodts */
 $ctor__jstypecastsinstanceof_CastToNativeType__void() {
  this.$ctor__java_lang_Object__void();
 }
 /** @nodts */
 m_test__void() {
  let a = new NativeJsType();
  let b = /**@type {NativeJsType}*/ ($Casts.$to(a, $Overlay));
  let c = $Overlay.$isInstance(a);
  let d = /**@type {Array<NativeJsType>}*/ ($Arrays.$castToNative(a));
  c = $Arrays.$instanceIsOfNative(a);
  let /** Object */ e = /**@type {Object}*/ ($Casts.$to(a, NativeObject_$Overlay));
  let f = /**@type {Object<?string, *>}*/ ($Casts.$to(a, NativeObject_$Overlay));
  c = NativeObject_$Overlay.$isInstance(a);
  let g = /**@type {Array<Object>}*/ ($Arrays.$castToNative(a));
  let h = /**@type {Array<Object<?string, *>>}*/ ($Arrays.$castToNative(a));
  c = $Arrays.$instanceIsOfNative(a);
 }
 /** @nodts */
 static $clinit() {
  CastToNativeType.$clinit = () =>{};
  CastToNativeType.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof CastToNativeType;
 }
 
 /** @nodts */
 static $loadModules() {
  $Overlay = goog.module.get('jstypecastsinstanceof.CastToNativeType.NativeJsType.$Overlay$impl');
  NativeObject_$Overlay = goog.module.get('jstypecastsinstanceof.CastToNativeType.NativeObject.$Overlay$impl');
  NativeJsType = goog.module.get('test.foo.NativeJsType');
  $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
  $Casts = goog.module.get('vmbootstrap.Casts$impl');
 }
}
$Util.$setClassMetadata(CastToNativeType, 'jstypecastsinstanceof.CastToNativeType');

exports = CastToNativeType;

//# sourceMappingURL=CastToNativeType.js.map
