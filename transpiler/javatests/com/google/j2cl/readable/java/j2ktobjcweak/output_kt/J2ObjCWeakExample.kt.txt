// Generated from "j2ktobjcweak/J2ObjCWeakExample.java"
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "REDUNDANT_ELSE_IN_WHEN")

package j2ktobjcweak

import javaemul.lang.*
import kotlin.Suppress
import kotlin.jvm.JvmStatic

class J2ObjCWeakExample {
 private val finalNullableFoo: Foo?

 private val finalNonNullFoo: Foo

 private var nullableFooWithoutInitializer: Foo? = null

 private var nullableFooWithInitializer: Foo? = Foo()

 private var nonNullFooWithoutInitializer: Foo

 private var nonNullFooWithInitializer: Foo = Foo()

 constructor() {
  this.finalNullableFoo = null
  this.finalNonNullFoo = Foo()
  this.nonNullFooWithoutInitializer = Foo()
 }

 constructor(nullableFoo: Foo?, nonNullFoo: Foo) {
  this.finalNullableFoo = nullableFoo
  this.finalNonNullFoo = nullableFoo!!
  this.nullableFooWithoutInitializer = nonNullFoo
  this.nonNullFooWithoutInitializer = nonNullFoo
 }

 fun setFoo(nullableFoo: Foo?, nonNullFoo: Foo) {
  this.nullableFooWithoutInitializer = nullableFoo
  this.nullableFooWithInitializer = nullableFoo
  this.nonNullFooWithoutInitializer = nonNullFoo
  this.nonNullFooWithInitializer = this.nonNullFooWithoutInitializer
 }

 fun getNullableFoo(): Foo? {
  return this.nullableFooWithoutInitializer
 }

 fun getNonNullFoo(): Foo {
  return this.nonNullFooWithoutInitializer
 }

 companion object {
  @JvmStatic
  fun nonNullVariable(foo1: Foo, foo2: Foo): Foo {
   var localFoo: Foo = foo1
   localFoo = foo2
   return localFoo
  }

  @JvmStatic
  fun nullableVariable(foo1: Foo?, foo2: Foo?): Foo {
   var localFoo: Foo? = foo1
   localFoo = foo2
   return localFoo!!
  }

  @JvmStatic
  fun finalNonNullVariable(foo: Foo): Foo {
   val localFoo: Foo = foo
   return localFoo
  }

  @JvmStatic
  fun finalNullableVariable(foo: Foo?): Foo {
   val localFoo: Foo? = foo
   return localFoo!!
  }
 }

 class Foo
}
