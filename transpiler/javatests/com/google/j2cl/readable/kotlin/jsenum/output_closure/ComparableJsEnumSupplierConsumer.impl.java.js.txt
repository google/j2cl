goog.module('jsenum.ComparableJsEnumSupplierConsumer$impl');

const Consumer = goog.require('jsenum.Consumer$impl');
const Supplier = goog.require('jsenum.Supplier$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let ComparableJsEnum = goog.forwardDeclare('jsenum.ComparableJsEnum$impl');
let $Enums_BoxedComparableLightEnum = goog.forwardDeclare('vmbootstrap.Enums.BoxedComparableLightEnum$impl');

/**
 * @interface
 * @extends {Supplier<!$Enums_BoxedComparableLightEnum<!ComparableJsEnum>>}
 * @extends {Consumer<!$Enums_BoxedComparableLightEnum<!ComparableJsEnum>>}
 */
class ComparableJsEnumSupplierConsumer {
 /** @abstract @return {!ComparableJsEnum} */
 get() {}
 /** @abstract @nodts */
 m_accept__jsenum_ComparableJsEnum__void(/** !ComparableJsEnum */ e) {}
 /** @nodts */
 static $clinit() {
  ComparableJsEnumSupplierConsumer.$clinit = () =>{};
  ComparableJsEnumSupplierConsumer.$loadModules();
 }
 
 static $markImplementor(/** Function */ ctor) {
  Supplier.$markImplementor(ctor);
  Consumer.$markImplementor(ctor);
  ctor.prototype.$implements__jsenum_ComparableJsEnumSupplierConsumer = true;
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance != null && !!instance.$implements__jsenum_ComparableJsEnumSupplierConsumer;
 }
 
 /** @nodts */
 static $loadModules() {}
}
ComparableJsEnumSupplierConsumer.$markImplementor(/**@type {Function}*/ (ComparableJsEnumSupplierConsumer));
$Util.$setClassMetadataForInterface(/**@type {Function}*/ (ComparableJsEnumSupplierConsumer), 'jsenum.ComparableJsEnumSupplierConsumer');

exports = ComparableJsEnumSupplierConsumer;

//# sourceMappingURL=ComparableJsEnumSupplierConsumer.js.map
