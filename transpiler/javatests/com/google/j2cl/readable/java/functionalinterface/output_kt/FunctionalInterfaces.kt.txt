// Generated from "functionalinterface/FunctionalInterfaces.java"
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "INCOMPATIBLE_OBJC_NAME_OVERRIDE",
 "REDUNDANT_ELSE_IN_WHEN")

package functionalinterface

import javaemul.lang.*
import kotlin.Int
import kotlin.String
import kotlin.Suppress

open class FunctionalInterfaces {
 fun interface NonParametrized {
  fun apply(string: String?): String?
 }

 fun interface Parametrized<T> {
  fun apply(t: T): T
 }

 fun interface Specialized: Parametrized<String?> {
  override fun apply(string: String?): String?
 }

 fun interface WithDefaultMethod {
  fun apply(string: String?): String?

  fun defaultApply(string: String?): String? {
   return this@WithDefaultMethod.apply(string)
  }
 }

 fun interface WithObjectMethods {
  fun apply(string: String?): String?
 }

 interface WithParametrizedMethod {
  fun <T> apply(t: T): T
 }

 interface WithKtProperty {
  val size: Int
 }
}
