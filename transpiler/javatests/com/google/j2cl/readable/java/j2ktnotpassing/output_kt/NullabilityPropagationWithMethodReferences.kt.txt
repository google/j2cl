// Generated from "j2ktnotpassing/NullabilityPropagationWithMethodReferences.java"
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "REDUNDANT_ELSE_IN_WHEN")

package j2ktnotpassing

import javaemul.lang.*
import java.lang.RuntimeException
import kotlin.Suppress
import kotlin.jvm.JvmStatic

class NullabilityPropagationWithMethodReferences {
 companion object {
  @JvmStatic
  fun <T> apply(t: T): T {
   throw RuntimeException()
  }
 }

 class Foo {
  companion object {
   @JvmStatic
   fun create(): Foo {
    return Foo()
   }
  }

  fun interface Factory {
   fun create(): Foo
  }
 }
}
