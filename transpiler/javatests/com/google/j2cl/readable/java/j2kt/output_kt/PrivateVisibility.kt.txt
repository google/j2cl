// Generated from "j2kt/PrivateVisibility.java"
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "INCOMPATIBLE_OBJC_NAME_OVERRIDE",
 "REDUNDANT_ELSE_IN_WHEN")

package j2kt

import javaemul.lang.*
import kotlin.Int
import kotlin.Suppress
import kotlin.jvm.JvmField
import kotlin.jvm.JvmStatic

class PrivateVisibility {
 companion object {
  @JvmStatic
  fun testOuterConstructorReference(): OuterConstructorReference {
   return OuterConstructorReference()
  }
 }

 class InnerConstructorReference {
  private constructor()

  companion object {
   @JvmStatic
   fun testInnerConstructorReference(): InnerConstructorReference {
    return InnerConstructorReference()
   }
  }
 }

 class OuterConstructorReference {
  internal constructor()
 }

 class Outer {
  fun testMemberReference() {
   Outer.outerField = 0
   Outer.outerMethod()
   Inner.innerField_outerReference_private_2 = 0
   Inner.innerMethod_outerReference_private_2()
  }

  companion object {
   private var outerField: Int = 0

   @JvmStatic
   private fun outerMethod() {}
  }

  class Inner {
   fun testMemberReference() {
    Outer.outerField = 0
    Outer.outerMethod()
    Inner.innerField_innerReference = 0
    Inner.innerMethod_innerReference()
   }

   companion object {
    private var innerField_innerReference: Int = 0

    @JvmField
    internal var innerField_outerReference_private_2: Int = 0

    @JvmStatic
    private fun innerMethod_innerReference() {}

    @JvmStatic
    internal fun innerMethod_outerReference_private_2() {}
   }
  }
 }
}
