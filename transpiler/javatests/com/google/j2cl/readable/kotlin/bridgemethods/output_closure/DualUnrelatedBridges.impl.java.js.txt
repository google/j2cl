goog.module('bridgemethods.DualUnrelatedBridges$impl');

const SomeInterface = goog.require('bridgemethods.SomeInterface$impl');
const SomeOtherFooInterface = goog.require('bridgemethods.SomeOtherFooInterface$impl');
const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Double = goog.forwardDeclare('java.lang.Double$impl');
let Number = goog.forwardDeclare('java.lang.Number$impl');
let j_l_String = goog.forwardDeclare('java.lang.String$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');

/**
 * @final
 * @implements {SomeInterface<?string, ?number>}
 * @implements {SomeOtherFooInterface<?string>}
 */
class DualUnrelatedBridges extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @return {!DualUnrelatedBridges} */
 static $create__() {
  DualUnrelatedBridges.$clinit();
  let $instance = new DualUnrelatedBridges();
  $instance.$ctor__bridgemethods_DualUnrelatedBridges__void();
  return $instance;
 }
 /** @nodts */
 $ctor__bridgemethods_DualUnrelatedBridges__void() {
  this.$ctor__java_lang_Object__void();
 }
 /** @nodts */
 m_foo__java_lang_String__java_lang_Double__void(/** ?string */ s, /** ?number */ n) {}
 /** @nodts */
 m_foo__java_lang_String__java_lang_Number__void(/** ?string */ s, /** (Number|number) */ n) {}
 //Bridge method.
 /** @final @override @nodts @suppress{visibility} */
 m_foo__java_lang_Object__java_lang_Object__void(/** ?string */ arg0, /** ?number */ arg1) {
  this.m_foo__java_lang_String__java_lang_Double__void(/**@type {?string}*/ ($Casts.$to(arg0, j_l_String)), /**@type {?number}*/ ($Casts.$to(arg1, Double)));
 }
 //Bridge method.
 /** @final @override @nodts @suppress{visibility} */
 m_foo__java_lang_Object__java_lang_Number__void(/** ?string */ arg0, /** (Number|number) */ arg1) {
  this.m_foo__java_lang_String__java_lang_Number__void(/**@type {?string}*/ ($Casts.$to(arg0, j_l_String)), arg1);
 }
 //Bridge method.
 /** @final @override @nodts @suppress{visibility} */
 m_foo__java_lang_Object__java_lang_Double__void(/** ?string */ arg0, /** ?number */ arg1) {
  this.m_foo__java_lang_String__java_lang_Double__void(/**@type {?string}*/ ($Casts.$to(arg0, j_l_String)), arg1);
 }
 /** @nodts */
 static $clinit() {
  DualUnrelatedBridges.$clinit = () =>{};
  DualUnrelatedBridges.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof DualUnrelatedBridges;
 }
 
 /** @nodts */
 static $loadModules() {
  Double = goog.module.get('java.lang.Double$impl');
  j_l_String = goog.module.get('java.lang.String$impl');
  $Casts = goog.module.get('vmbootstrap.Casts$impl');
 }
}
SomeInterface.$markImplementor(DualUnrelatedBridges);
SomeOtherFooInterface.$markImplementor(DualUnrelatedBridges);
$Util.$setClassMetadata(DualUnrelatedBridges, 'bridgemethods.DualUnrelatedBridges');

exports = DualUnrelatedBridges;

//# sourceMappingURL=DualUnrelatedBridges.js.map
