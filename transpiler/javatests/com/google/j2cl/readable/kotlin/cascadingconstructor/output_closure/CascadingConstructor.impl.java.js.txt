goog.module('cascadingconstructor.CascadingConstructor$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

/**
 * @final
 */
class CascadingConstructor extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {number} @nodts*/
  this.f_a__cascadingconstructor_CascadingConstructor_ = 0;
  /**@type {number} @nodts*/
  this.f_b__cascadingconstructor_CascadingConstructor_ = 0;
 }
 //Factory method corresponding to constructor 'CascadingConstructor(int, int)'.
 /** @nodts @return {!CascadingConstructor} */
 static $create__int__int(/** number */ a, /** number */ b) {
  let $instance = new CascadingConstructor();
  $instance.$ctor__cascadingconstructor_CascadingConstructor__int__int__void(a, b);
  return $instance;
 }
 //Initialization from constructor 'CascadingConstructor(int, int)'.
 /** @nodts */
 $ctor__cascadingconstructor_CascadingConstructor__int__int__void(/** number */ a, /** number */ b) {
  this.$ctor__java_lang_Object__void();
  this.f_a__cascadingconstructor_CascadingConstructor_ = a;
  this.f_b__cascadingconstructor_CascadingConstructor_ = b;
 }
 //Factory method corresponding to constructor 'CascadingConstructor(int)'.
 /** @nodts @return {!CascadingConstructor} */
 static $create__int(/** number */ a) {
  CascadingConstructor.$clinit();
  let $instance = new CascadingConstructor();
  $instance.$ctor__cascadingconstructor_CascadingConstructor__int__void(a);
  return $instance;
 }
 //Initialization from constructor 'CascadingConstructor(int)'.
 /** @nodts */
 $ctor__cascadingconstructor_CascadingConstructor__int__void(/** number */ a) {
  this.$ctor__cascadingconstructor_CascadingConstructor__int__int__void(a, Math.imul(a, 2));
 }
 /** @nodts */
 static $clinit() {
  CascadingConstructor.$clinit = () =>{};
  CascadingConstructor.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof CascadingConstructor;
 }
 
 /** @nodts */
 static $loadModules() {}
}
$Util.$setClassMetadata(CascadingConstructor, 'cascadingconstructor.CascadingConstructor');

exports = CascadingConstructor;

//# sourceMappingURL=CascadingConstructor.js.map
