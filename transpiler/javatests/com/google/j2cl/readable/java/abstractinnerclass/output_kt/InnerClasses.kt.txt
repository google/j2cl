// Generated from "abstractinnerclass/InnerClasses.java"
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "INCOMPATIBLE_OBJC_NAME_OVERRIDE",
 "REDUNDANT_ELSE_IN_WHEN")

package abstractinnerclass

import javaemul.lang.*
import kotlin.Suppress

open class InnerClasses {
 fun interface A {
  fun foo()
 }

 abstract class B internal constructor(): A {
  internal open fun bar_pp_abstractinnerclass() {
   this.foo()
  }
 }

 abstract inner class C internal constructor(): A {
  internal open fun bar_pp_abstractinnerclass() {
   this.foo()
  }
 }
}
