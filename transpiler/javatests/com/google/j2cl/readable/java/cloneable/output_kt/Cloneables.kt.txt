// Generated from "cloneable/Cloneables.java"
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "INCOMPATIBLE_OBJC_NAME_OVERRIDE",
 "REDUNDANT_ELSE_IN_WHEN")

package cloneable

import javaemul.lang.*
import java.lang.CloneNotSupportedException
import kotlin.Any
import kotlin.Cloneable
import kotlin.Suppress
import kotlin.jvm.Throws

open class Cloneables {
 open class WithoutCloneable {
  @Throws(CloneNotSupportedException::class)
  open fun clone(): Any {
   return WithoutCloneable()
  }
 }

 open class WithCloneable: Cloneable {
  @Throws(CloneNotSupportedException::class)
  override fun clone(): Any {
   return WithCloneable()
  }
 }

 class WithoutCloneableChild: WithoutCloneable() {
  @Throws(CloneNotSupportedException::class)
  override fun clone(): Any {
   return WithoutCloneableChild()
  }
 }

 class WithCloneableChild: WithCloneable() {
  @Throws(CloneNotSupportedException::class)
  override fun clone(): Any {
   return WithCloneableChild()
  }
 }
}
