goog.module('jsconstructor.JsConstructorClass.InstanceVarargs$impl');

const A = goog.require('jsconstructor.JsConstructorClass.A$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let JsConstructorClass = goog.forwardDeclare('jsconstructor.JsConstructorClass$impl');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $$int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');

class InstanceVarargs extends A {
 
 constructor(/** !JsConstructorClass */ $outer_this, .../** ...number */ args) {
  InstanceVarargs.$clinit();
  $Arrays.$stampType(args, $$int);
  super();
  /**@type {!JsConstructorClass} @nodts*/
  this.$outer_this__jsconstructor_JsConstructorClass_InstanceVarargs;
  this.$ctor__jsconstructor_JsConstructorClass_InstanceVarargs__jsconstructor_JsConstructorClass__arrayOf_int__void($outer_this, args);
 }
 /** @nodts */
 $ctor__jsconstructor_JsConstructorClass_InstanceVarargs__jsconstructor_JsConstructorClass__arrayOf_int__void(/** !JsConstructorClass */ $outer_this, /** Array<number> */ args) {
  this.$outer_this__jsconstructor_JsConstructorClass_InstanceVarargs = $outer_this;
  this.$ctor__jsconstructor_JsConstructorClass_A__int__void(args[1]);
 }
 /** @nodts */
 static $clinit() {
  InstanceVarargs.$clinit = () =>{};
  InstanceVarargs.$loadModules();
  A.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof InstanceVarargs;
 }
 
 /** @nodts */
 static $loadModules() {
  $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
  $$int = goog.module.get('vmbootstrap.primitives.$int$impl');
 }
}
$Util.$setClassMetadata(InstanceVarargs, 'jsconstructor.JsConstructorClass$InstanceVarargs');

exports = InstanceVarargs;

//# sourceMappingURL=JsConstructorClass$InstanceVarargs.js.map
