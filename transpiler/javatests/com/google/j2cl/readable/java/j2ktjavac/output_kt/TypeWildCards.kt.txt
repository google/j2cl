// Generated from "j2ktjavac/TypeWildCards.java"
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "INCOMPATIBLE_OBJC_NAME_OVERRIDE",
 "REDUNDANT_ELSE_IN_WHEN")

package j2ktjavac

import javaemul.lang.*
import kotlin.Any
import kotlin.Array
import kotlin.Number
import kotlin.Suppress
import kotlin.jvm.JvmField
import kotlin.jvm.JvmStatic

open class TypeWildCards internal constructor() {
 internal open fun <T: Any> consume_pp_j2ktjavac(vararg t: T) {
  val t_1: Array<T> = t as Array<T>
 }

 internal open fun testIncosistentBounds_pp_j2ktjavac() {
  this.consume_pp_j2ktjavac<WithInTypeParameter<*>>(
   A(),
   B(),
  )
  this.consume_pp_j2ktjavac<WithInTypeParameter<*>>(
   A(),
   B(),
  )
 }

 internal open fun <T: Number> methodWithUnusedTypeParameter_pp_j2ktjavac() {}

 internal open fun testUnusedTypeParameter_pp_j2ktjavac() {
  this.methodWithUnusedTypeParameter_pp_j2ktjavac<Number>()
  this.methodWithUnusedTypeParameter_pp_j2ktjavac<Number>()
 }

 open class WithDependentBounds internal constructor() {
  companion object {
   @JvmStatic
   fun testSetField(holder: Holder<*, *>) {
    (holder as Holder<Event, Collection<*>>).observer_pp_j2ktjavac = Observer { e: Collection<out Event> ->
    }
   }

   @JvmStatic
   fun testSetMethod(holder: Holder<*, *>) {
    holder.set_pp_j2ktjavac(
     Observer { e: Collection<out Event> ->
     },
    )
   }

   @JvmStatic
   fun testSetStaticMethod(holder: Holder<*, *>) {
    Holder.setStatic_pp_j2ktjavac(
     holder,
     Observer { e: Collection<out Event> ->
     },
    )
   }
  }

  interface Event

  interface Collection<V>

  fun interface Observer<E: Event, C: Collection<E>> {
   fun on(events: C)
  }

  open class Holder<E: Event, C: Collection<E>> internal constructor() {
   @JvmField
   internal var observer_pp_j2ktjavac: Observer<E, C>? = null

   internal open fun set_pp_j2ktjavac(observer: Observer<E, C>) {}

   companion object {
    @JvmStatic
    internal fun <E: Event, C: Collection<E>> setStatic_pp_j2ktjavac(holder: Holder<E, C>, observer: Observer<E, C>) {}
   }
  }
 }

 interface WithInTypeParameter<in T: Any>

 open inner class A internal constructor(): WithInTypeParameter<TypeWildCards.A>

 open inner class B internal constructor(): WithInTypeParameter<TypeWildCards.B>

 open class Outer<T: Any, V: Any> internal constructor() {
  interface ParameterizedInterface<T, V>

  open inner class Inner internal constructor() {
   internal open fun testNullabilityOnWildcardBounds_pp_j2ktjavac(p: ParameterizedInterface<in T?, out V?>) {
    this.testNullabilityOnWildcardBounds_pp_j2ktjavac(p)
   }
  }
 }
}
