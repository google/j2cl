# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: Reusable Release Workflow

# This workflow is designed to be called from other workflows.
on:
  workflow_call:
    inputs:
      version:
        description: 'The version to release'
        required: true
        type: string
      publish_to_sonatype:
        description: 'Publish the release to Sonatype'
        type: boolean
        required: true
      sonatype_auto_publish:
        description: 'Automatically publish the release to Sonatype'
        type: boolean
        required: false
        default: false
      publish_to_bcr:
        description: 'Publish the repo to BCR'
        type: boolean
        required: false
        default: true
      create_github_release:
        description: 'Create a GitHub release (which also creates a git tag)'
        type: boolean
        required: false
        default: true
      continue_if_tag_exists:
        description: 'Continue the workflow even if the git tag already exists'
        type: boolean
        required: false
        default: false
    secrets:
      SONATYPE_USERNAME_TOKEN:
        description: 'Sonatype username token'
        required: false
      SONATYPE_PASSWORD_TOKEN:
        description: 'Sonatype password token'
        required: false
      MAVEN_GPG_PRIVATE_KEY:
        description: 'GPG private key for signing Maven artifacts'
        required: false
      MAVEN_GPG_PASSPHRASE:
        description: 'Passphrase for the GPG private key'
        required: false

jobs:
  publish_to_sonatype:
    runs-on: ubuntu-latest
    if: ${{ inputs.publish_to_sonatype }}

    steps:
      - name: Check secrets are provided
        run: |
          check_secret() {
            if [[ -z "${2:-}" ]]; then
              echo "Error: secret ${1} is required but not provided."
              exit 1
            fi
          }
          check_secret "SONATYPE_USERNAME_TOKEN" "${{ secrets.SONATYPE_USERNAME_TOKEN }}"
          check_secret "SONATYPE_PASSWORD_TOKEN" "${{ secrets.SONATYPE_PASSWORD_TOKEN }}"
          check_secret "MAVEN_GPG_PRIVATE_KEY" "${{ secrets.MAVEN_GPG_PRIVATE_KEY }}"
          check_secret "MAVEN_GPG_PASSPHRASE" "${{ secrets.MAVEN_GPG_PASSPHRASE }}"
      - name: Checkout current commit
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # Maven and Bazel require Java to be available.
      - name: Setup Java
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          java-version: '21'
          distribution: 'zulu'
          java-package: jdk
          # This will trigger the import of the private key in the GPG secret keyring.
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          # This will create the maven settings.xml file needed for deploying to Sonatype.
          server-id: central
          server-username: SONATYPE_USERNAME_TOKEN
          server-password: SONATYPE_PASSWORD_TOKEN
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Setup Bazel
        uses: bazelbuild/setup-bazelisk@v3

      # NOTE: This step assumes the calling repository has this script at the specified path.
      - name: Publish to Sonatype
        run: |
          auto_publish_flag=""
          if [[ "${{ inputs.sonatype_auto_publish }}" == true ]]; then
            auto_publish_flag="--sonatype-auto-publish"
          fi
          ./maven/publish_to_sonatype.sh --version ${{ inputs.version }} $auto_publish_flag
        env:
          SONATYPE_USERNAME_TOKEN: ${{ secrets.SONATYPE_USERNAME_TOKEN }}
          SONATYPE_PASSWORD_TOKEN: ${{ secrets.SONATYPE_PASSWORD_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

  create_git_tag:
    runs-on: ubuntu-latest
    permissions:
      # Required for creating and pushing git tags.
      contents: write
    steps:
      - name: Checkout current commit
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Check and Create Git Tag
        run: |
          TAG_NAME="${{ inputs.version }}"
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "Tag '$TAG_NAME' already exists."
            if [[ "${{ inputs.continue_if_tag_exists }}" == "true" ]]; then
              echo "Continuing workflow as 'continue_if_tag_exists' is true. Skipping tag creation."
              exit 0
            else
              echo "Error: Tag '$TAG_NAME' already exists and 'continue_if_tag_exists' is false. Aborting."
              exit 1
            fi
          fi

          git config --local user.email "j2cl-github-bot@github.com"
          git config --local user.name "J2CL GitHub Bot"
          git tag -a "$TAG_NAME" -m "Release $TAG_NAME"
          git push origin "$TAG_NAME"

  run_tests:
    needs: create_git_tag
    uses: ./.github/workflows/ci.yaml

  release:
    needs: run_tests
    if: ${{ inputs.create_github_release }}
    uses: bazel-contrib/.github/.github/workflows/release_ruleset.yaml@v7.2.3
    with:
      prerelease: false
      release_files: ${{ github.event.repository.name }}-*.tar.gz
      tag_name: ${{ inputs.version }}
      # TODO(dramaix): contribute upstream to allow skipping test.
      bazel_test_command: "bazel build"

  publish_to_bcr:
    if: ${{ inputs.publish_to_bcr }}
    needs: release
    uses: bazel-contrib/publish-to-bcr/.github/workflows/publish.yaml@v0.2.2
    with:
      tag_name: ${{ inputs.version }}
      registry_fork: j2cl-github-bot/bazel-central-registry
      attest: true
      author_name: j2cl-github-bot
      author_email: j2cl-github-bot@google.com
    permissions:
      contents: write
      id-token: write
      attestations: write
    secrets:
      publish_token: ${{ secrets.BCR_PUBLISH_TOKEN }}
