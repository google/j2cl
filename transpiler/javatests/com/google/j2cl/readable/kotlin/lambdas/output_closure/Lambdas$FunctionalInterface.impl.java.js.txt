goog.module('lambdas.Lambdas.FunctionalInterface$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let $LambdaAdaptor = goog.forwardDeclare('lambdas.Lambdas.FunctionalInterface.$LambdaAdaptor$impl');

/**
 * @interface
 */
class FunctionalInterface {
 /** @abstract @nodts @return {number} */
 m_m__int__int(/** number */ i) {}
 /** @nodts @return {!FunctionalInterface} */
 static $adapt(/** ?function(number):number */ fn) {
  FunctionalInterface.$clinit();
  return new $LambdaAdaptor(fn);
 }
 /** @nodts */
 static $clinit() {
  FunctionalInterface.$clinit = () =>{};
  FunctionalInterface.$loadModules();
 }
 
 static $markImplementor(/** Function */ ctor) {
  ctor.prototype.$implements__lambdas_Lambdas_FunctionalInterface = true;
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance != null && !!instance.$implements__lambdas_Lambdas_FunctionalInterface;
 }
 
 /** @nodts */
 static $loadModules() {
  $LambdaAdaptor = goog.module.get('lambdas.Lambdas.FunctionalInterface.$LambdaAdaptor$impl');
 }
}
FunctionalInterface.$markImplementor(/**@type {Function}*/ (FunctionalInterface));
$Util.$setClassMetadataForInterface(/**@type {Function}*/ (FunctionalInterface), 'lambdas.Lambdas$FunctionalInterface');

exports = FunctionalInterface;

//# sourceMappingURL=Lambdas$FunctionalInterface.js.map
