goog.module('operator.Operator$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let JsUtils = goog.forwardDeclare('javaemul.internal.JsUtils$impl');
let DefaultConstructorMarker = goog.forwardDeclare('kotlin.jvm.internal.DefaultConstructorMarker$impl');

/**
 * @final
 */
class Operator extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {number} @nodts*/
  this.f_i__operator_Operator_ = 0;
 }
 //Factory method corresponding to constructor 'Operator(int)'.
 /** @nodts @return {!Operator} */
 static $create__int(/** number */ i) {
  Operator.$clinit();
  let $instance = new Operator();
  $instance.$ctor__operator_Operator__int__void(i);
  return $instance;
 }
 //Initialization from constructor 'Operator(int)'.
 /** @nodts */
 $ctor__operator_Operator__int__void(/** number */ i) {
  this.$ctor__java_lang_Object__void();
  this.f_i__operator_Operator_ = i;
 }
 //Factory method corresponding to constructor 'Operator(int, DefaultConstructorMarker)'.
 /** @nodts @return {!Operator} */
 static $create__int__kotlin_jvm_internal_DefaultConstructorMarker(/** number= */ i, /** DefaultConstructorMarker= */ $marker) {
  Operator.$clinit();
  let $instance = new Operator();
  $instance.$ctor__operator_Operator__int__kotlin_jvm_internal_DefaultConstructorMarker__void(i, $marker);
  return $instance;
 }
 //Initialization from constructor 'Operator(int, DefaultConstructorMarker)'.
 /** @nodts */
 $ctor__operator_Operator__int__kotlin_jvm_internal_DefaultConstructorMarker__void(/** number= */ i, /** DefaultConstructorMarker= */ $marker) {
  let i$defaulted = JsUtils.isUndefined(i) ? 0 : i;
  this.$ctor__operator_Operator__int__void(i$defaulted);
 }
 /** @final @nodts @return {number} */
 m_getI__int() {
  return this.f_i__operator_Operator_;
 }
 /** @final @nodts */
 m_setI__int__void(/** number */ set__) {
  this.f_i__operator_Operator_ = set__;
 }
 /** @final @nodts @return {!Operator} */
 m_plus__operator_Operator__operator_Operator(/** !Operator */ o) {
  let newI = this.m_getI__int() + o.m_getI__int() | 0;
  return Operator.$create__int(newI);
 }
 /** @final @nodts @return {!Operator} */
 m_plus__int__operator_Operator(/** number */ j) {
  let newI = this.m_getI__int() + j | 0;
  return Operator.$create__int(newI);
 }
 /** @final @nodts @return {number} */
 m_compareTo__operator_Operator__int(/** !Operator */ other) {
  if (this.m_getI__int() < other.m_getI__int()) {
   return -1;
  }
  if (this.m_getI__int() > other.m_getI__int()) {
   return 1;
  }
  return 0;
 }
 /** @final @nodts */
 m_main__void() {
  let o = Operator.$create__int(1).m_plus__operator_Operator__operator_Operator(Operator.$create__int(2));
  o = Operator.$create__int(1).m_plus__int__operator_Operator(3);
  let b = o.m_compareTo__operator_Operator__int(Operator.$create__int(4)) < 0;
 }
 /** @nodts */
 static $clinit() {
  Operator.$clinit = () =>{};
  Operator.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof Operator;
 }
 
 /** @nodts */
 static $loadModules() {
  JsUtils = goog.module.get('javaemul.internal.JsUtils$impl');
 }
}
$Util.$setClassMetadata(Operator, 'operator.Operator');

exports = Operator;

//# sourceMappingURL=Operator.js.map
