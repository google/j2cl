goog.module('jvmmultifileclass.foo$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let foo____AKt = goog.forwardDeclare('jvmmultifileclass.foo__AKt$impl');
let foo____BKt = goog.forwardDeclare('jvmmultifileclass.foo__BKt$impl');

/**
 * @final
 */
class foo extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @return {!foo} */
 static $create__() {
  foo.$clinit();
  let $instance = new foo();
  $instance.$ctor__jvmmultifileclass_foo__void();
  return $instance;
 }
 /** @nodts */
 $ctor__jvmmultifileclass_foo__void() {
  this.$ctor__java_lang_Object__void();
 }
 /** @nodts */
 static m_a__void() {
  foo.$clinit();
  return foo____AKt.m_a__void();
 }
 /** @nodts */
 static m_b__void() {
  foo.$clinit();
  return foo____BKt.m_b__void();
 }
 /** @nodts */
 static $clinit() {
  foo.$clinit = () =>{};
  foo.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof foo;
 }
 
 /** @nodts */
 static $loadModules() {
  foo____AKt = goog.module.get('jvmmultifileclass.foo__AKt$impl');
  foo____BKt = goog.module.get('jvmmultifileclass.foo__BKt$impl');
 }
}
$Util.$setClassMetadata(foo, 'jvmmultifileclass.foo');

exports = foo;

//# sourceMappingURL=foo.js.map
