// Generated from "interfaces/AccidentalOverride.java"
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "INCOMPATIBLE_OBJC_NAME_OVERRIDE",
 "REDUNDANT_ELSE_IN_WHEN")

package interfaces

import javaemul.lang.*
import kotlin.Suppress

open class AccidentalOverride {
 interface Left<T: Left<T>> {
  fun foo(t: T) {}
 }

 interface Right<T: Right<T>> {
  fun foo(t: T) {}
 }

 interface Bottom<T: Bottom<T>>: Left<T>, Right<T> {
  override fun foo(t: T) {}
 }

 open class A<T: Left<T>, V: Right<V>>: Left<T>, Right<V>

 open class B: A<B, B>(), Bottom<B>

 open class C: Bottom<C> {
  override fun foo(c: C) {}
 }
}
