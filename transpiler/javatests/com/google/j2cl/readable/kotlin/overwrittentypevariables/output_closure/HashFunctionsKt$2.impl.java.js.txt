goog.module('overwrittentypevariables.HashFunctionsKt.$2$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');
const HashFunction = goog.require('overwrittentypevariables.HashFunction$impl');

let Enum = goog.forwardDeclare('java.lang.Enum$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');

/**
 * @final
 * @template T
 * @implements {HashFunction<T>}
 */
class $2 extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @template T @return {!$2<T>} */
 static $create__() {
  $2.$clinit();
  let $instance = new $2();
  $instance.$ctor__overwrittentypevariables_HashFunctionsKt_2__void();
  return $instance;
 }
 /** @nodts */
 $ctor__overwrittentypevariables_HashFunctionsKt_2__void() {
  this.$ctor__java_lang_Object__void();
 }
 /** @nodts @return {?string} */
 m_apply__java_lang_Enum__java_lang_String(/** T */ input) {
  return '' + (/**@type {!Enum<?>}*/ (input)).ordinal();
 }
 //Bridge method.
 /** @final @override @nodts @suppress{visibility} @return {?string} */
 m_apply__java_lang_Object__java_lang_Object(/** T */ arg0) {
  return this.m_apply__java_lang_Enum__java_lang_String(/**@type {T}*/ ($Casts.$to(arg0, Enum)));
 }
 /** @nodts */
 static $clinit() {
  $2.$clinit = () =>{};
  $2.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof $2;
 }
 
 /** @nodts */
 static $loadModules() {
  Enum = goog.module.get('java.lang.Enum$impl');
  $Casts = goog.module.get('vmbootstrap.Casts$impl');
 }
}
HashFunction.$markImplementor($2);
$Util.$setClassMetadata($2, 'overwrittentypevariables.HashFunctionsKt$2');

exports = $2;

//# sourceMappingURL=HashFunctionsKt$2.js.map
