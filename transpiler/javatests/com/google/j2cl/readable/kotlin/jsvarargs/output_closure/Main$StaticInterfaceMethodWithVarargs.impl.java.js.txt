goog.module('jsvarargs.Main.StaticInterfaceMethodWithVarargs$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $$int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');

/**
 * @interface
 */
class StaticInterfaceMethodWithVarargs {
 
 static staticMethod(.../** ...number */ args) {
  StaticInterfaceMethodWithVarargs.$clinit();
  $Arrays.$stampType(args, $$int);
 }
 /** @nodts */
 static $clinit() {
  StaticInterfaceMethodWithVarargs.$clinit = () =>{};
  StaticInterfaceMethodWithVarargs.$loadModules();
 }
 
 static $markImplementor(/** Function */ ctor) {
  ctor.prototype.$implements__jsvarargs_Main_StaticInterfaceMethodWithVarargs = true;
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance != null && !!instance.$implements__jsvarargs_Main_StaticInterfaceMethodWithVarargs;
 }
 
 /** @nodts */
 static $loadModules() {
  $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
  $$int = goog.module.get('vmbootstrap.primitives.$int$impl');
 }
}
StaticInterfaceMethodWithVarargs.$markImplementor(/**@type {Function}*/ (StaticInterfaceMethodWithVarargs));
$Util.$setClassMetadataForInterface(/**@type {Function}*/ (StaticInterfaceMethodWithVarargs), 'jsvarargs.Main$StaticInterfaceMethodWithVarargs');

exports = StaticInterfaceMethodWithVarargs;

//# sourceMappingURL=Main$StaticInterfaceMethodWithVarargs.js.map
