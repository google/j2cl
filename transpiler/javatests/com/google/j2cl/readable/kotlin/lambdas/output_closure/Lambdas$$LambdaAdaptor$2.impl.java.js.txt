goog.module('lambdas.Lambdas.$LambdaAdaptor$2$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Throwable = goog.forwardDeclare('java.lang.Throwable$impl');
let Unit = goog.forwardDeclare('kotlin.Unit$impl');

/**
 * @template T
 */
class $LambdaAdaptor$2 extends j_l_Object {
 /** @nodts */
 constructor(/** ?function(function(?T):Unit, function(Throwable):Unit):void */ fn) {
  $LambdaAdaptor$2.$clinit();
  super();
  /**@type {?function(function(?T):Unit, function(Throwable):Unit):void} @nodts*/
  this.f_fn__lambdas_Lambdas_$LambdaAdaptor$2;
  this.$ctor__lambdas_Lambdas_$LambdaAdaptor$2__lambdas_Lambdas_AnotherThenable_$JsFunction__void(fn);
 }
 /** @nodts */
 $ctor__lambdas_Lambdas_$LambdaAdaptor$2__lambdas_Lambdas_AnotherThenable_$JsFunction__void(/** ?function(function(?T):Unit, function(Throwable):Unit):void */ fn) {
  this.$ctor__java_lang_Object__void();
  this.f_fn__lambdas_Lambdas_$LambdaAdaptor$2 = fn;
 }
 
 then(/** function(?T):Unit */ arg0, /** function(Throwable):Unit */ arg1) {
  {
   let $function = this.f_fn__lambdas_Lambdas_$LambdaAdaptor$2;
   $function(arg0, arg1);
  }
 }
 /** @nodts */
 static $clinit() {
  $LambdaAdaptor$2.$clinit = () =>{};
  $LambdaAdaptor$2.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof $LambdaAdaptor$2;
 }
 
 /** @nodts */
 static $loadModules() {}
}
$Util.$setClassMetadata($LambdaAdaptor$2, 'lambdas.Lambdas$$LambdaAdaptor$2');

exports = $LambdaAdaptor$2;

//# sourceMappingURL=Lambdas$$LambdaAdaptor$2.js.map
