goog.module('anonymousinnerclass.AnonymousInnerClass.InnerClass$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let AnonymousInnerClass = goog.forwardDeclare('anonymousinnerclass.AnonymousInnerClass$impl');

class InnerClass extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {!AnonymousInnerClass} @nodts*/
  this.$outer_this__anonymousinnerclass_AnonymousInnerClass_InnerClass;
 }
 /** @nodts @return {!InnerClass} */
 static $create__anonymousinnerclass_AnonymousInnerClass(/** !AnonymousInnerClass */ $outer_this) {
  InnerClass.$clinit();
  let $instance = new InnerClass();
  $instance.$ctor__anonymousinnerclass_AnonymousInnerClass_InnerClass__anonymousinnerclass_AnonymousInnerClass__void($outer_this);
  return $instance;
 }
 /** @nodts */
 $ctor__anonymousinnerclass_AnonymousInnerClass_InnerClass__anonymousinnerclass_AnonymousInnerClass__void(/** !AnonymousInnerClass */ $outer_this) {
  this.$outer_this__anonymousinnerclass_AnonymousInnerClass_InnerClass = $outer_this;
  this.$ctor__java_lang_Object__void();
 }
 /** @nodts */
 static $clinit() {
  InnerClass.$clinit = () =>{};
  InnerClass.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof InnerClass;
 }
 
 /** @nodts */
 static $loadModules() {}
}
$Util.$setClassMetadata(InnerClass, 'anonymousinnerclass.AnonymousInnerClass$InnerClass');

exports = InnerClass;

//# sourceMappingURL=AnonymousInnerClass$InnerClass.js.map
