goog.module('lambdas.Sub$impl');

const Super = goog.require('lambdas.Super$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Runnable = goog.forwardDeclare('lambdas.Runnable$impl');

/**
 * @final
 */
class Sub extends Super {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @return {!Sub} */
 static $create__() {
  Sub.$clinit();
  let $instance = new Sub();
  $instance.$ctor__lambdas_Sub__void();
  return $instance;
 }
 /** @nodts */
 $ctor__lambdas_Sub__void() {
  this.$ctor__lambdas_Super__void();
 }
 /** @final @nodts */
 m_n__void() {
  let r = Runnable.$adapt(() =>{
   Super.prototype.m_m__void.call(this);
  });
 }
 /** @nodts */
 static $clinit() {
  Sub.$clinit = () =>{};
  Sub.$loadModules();
  Super.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof Sub;
 }
 
 /** @nodts */
 static $loadModules() {
  Runnable = goog.module.get('lambdas.Runnable$impl');
 }
}
$Util.$setClassMetadata(Sub, 'lambdas.Sub');

exports = Sub;

//# sourceMappingURL=Sub.js.map
