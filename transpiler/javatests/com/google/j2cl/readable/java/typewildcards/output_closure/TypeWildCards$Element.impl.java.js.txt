goog.module('typewildcards.TypeWildCards.Element$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');
const HasKey = goog.require('typewildcards.TypeWildCards.HasKey$impl');
const IntegerSupplier = goog.require('typewildcards.TypeWildCards.IntegerSupplier$impl');

let Integer = goog.forwardDeclare('java.lang.Integer$impl');
let TypeWildCards = goog.forwardDeclare('typewildcards.TypeWildCards$impl');

/**
 * @abstract
 * @implements {HasKey}
 * @implements {IntegerSupplier}
 */
class Element extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {!TypeWildCards} @nodts*/
  this.$outer_this__typewildcards_TypeWildCards_Element;
 }
 /** @nodts */
 $ctor__typewildcards_TypeWildCards_Element__typewildcards_TypeWildCards__void(/** !TypeWildCards */ $outer_this) {
  this.$outer_this__typewildcards_TypeWildCards_Element = $outer_this;
  this.$ctor__java_lang_Object__void();
 }
 /** @nodts */
 static $clinit() {
  Element.$clinit = () =>{};
  Element.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof Element;
 }
 /** @abstract @override @nodts @return {?string} */
 m_getKey__java_lang_String() {}
 /** @abstract @override @nodts @return {Integer} */
 m_get__java_lang_Integer() {}
 
 /** @nodts */
 static $loadModules() {}
}
HasKey.$markImplementor(Element);
IntegerSupplier.$markImplementor(Element);
$Util.$setClassMetadata(Element, 'typewildcards.TypeWildCards$Element');

exports = Element;

//# sourceMappingURL=TypeWildCards$Element.js.map
