goog.module('nativejstypeobjectmethods.Main$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let NativeJsTypeWithToString = goog.forwardDeclare('test.foo.NativeJsTypeWithToString');
let NativeJsTypeWithoutToString = goog.forwardDeclare('test.foo.NativeJsTypeWithoutToString');
let $Objects = goog.forwardDeclare('vmbootstrap.Objects$impl');

/**
 * @final
 */
class Main extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @return {!Main} */
 static $create__() {
  Main.$clinit();
  let $instance = new Main();
  $instance.$ctor__nativejstypeobjectmethods_Main__void();
  return $instance;
 }
 /** @nodts */
 $ctor__nativejstypeobjectmethods_Main__void() {
  this.$ctor__java_lang_Object__void();
 }
 /** @nodts */
 static m_test__void() {
  Main.$clinit();
  let n1 = new NativeJsTypeWithToString();
  n1.toString();
  let n2 = new NativeJsTypeWithToString();
  $Objects.m_toString__java_lang_Object__java_lang_String(n2);
  let n3 = new NativeJsTypeWithoutToString();
  $Objects.m_toString__java_lang_Object__java_lang_String(n3);
  let n4 = new NativeJsTypeWithoutToString();
  $Objects.m_toString__java_lang_Object__java_lang_String(n4);
 }
 /** @nodts */
 static $clinit() {
  Main.$clinit = () =>{};
  Main.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof Main;
 }
 
 /** @nodts */
 static $loadModules() {
  NativeJsTypeWithToString = goog.module.get('test.foo.NativeJsTypeWithToString');
  NativeJsTypeWithoutToString = goog.module.get('test.foo.NativeJsTypeWithoutToString');
  $Objects = goog.module.get('vmbootstrap.Objects$impl');
 }
}
$Util.$setClassMetadata(Main, 'nativejstypeobjectmethods.Main');

exports = Main;

//# sourceMappingURL=Main.js.map
