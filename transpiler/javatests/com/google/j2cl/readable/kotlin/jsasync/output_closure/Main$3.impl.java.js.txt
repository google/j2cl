goog.module('jsasync.Main.$3$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');
const $JavaScriptFunction = goog.require('vmbootstrap.JavaScriptFunction$impl');

let Integer = goog.forwardDeclare('java.lang.Integer$impl');
let Main = goog.forwardDeclare('jsasync.Main$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');

/**
 * @final
 */
class $3 extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {!Main} @nodts*/
  this.$outer_this__jsasync_Main_3;
 }
 /** @nodts @return {function():!IThenable<!Integer>} */
 static $create__jsasync_Main(/** !Main */ $outer_this) {
  $3.$clinit();
  let $instance = new $3();
  $instance.$ctor__jsasync_Main_3__jsasync_Main__void($outer_this);
  return $Util.$makeLambdaFunction($3.prototype.m_doSomething__jsasync_IThenable, $instance, $3.$copy);
 }
 /** @nodts */
 $ctor__jsasync_Main_3__jsasync_Main__void(/** !Main */ $outer_this) {
  this.$outer_this__jsasync_Main_3 = $outer_this;
  this.$ctor__java_lang_Object__void();
 }
 /** @return {!IThenable<!Integer>} */
 async m_doSomething__jsasync_IThenable() {
  let unused = /**@type {function():!IThenable<!Integer>}*/ (this);
  return /**@type {!Promise<!Integer>}*/ (Promise.resolve(/**@type {!Integer}*/ ($Casts.$to(await this.$outer_this__jsasync_Main_3.f_x__jsasync_Main_, Integer))));
 }
 /** @nodts */
 static $clinit() {
  $3.$clinit = () =>{};
  $3.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance != null && !!instance.$is__jsasync_Main_3;
 }
 /** @nodts */
 static $copy(/** ? */ from, /** ? */ to) {
  to.$outer_this__jsasync_Main_3 = from.$outer_this__jsasync_Main_3;
  to.$is__jsasync_Main_3 = true;
 }
 
 /** @nodts */
 static $loadModules() {
  Integer = goog.module.get('java.lang.Integer$impl');
  $Casts = goog.module.get('vmbootstrap.Casts$impl');
 }
}
$JavaScriptFunction.$markImplementor($3);
$Util.$setClassMetadata($3, 'jsasync.Main$3');

exports = $3;

//# sourceMappingURL=Main$3.js.map
