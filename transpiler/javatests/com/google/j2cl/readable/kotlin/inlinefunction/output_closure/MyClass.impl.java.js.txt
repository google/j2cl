goog.module('inlinefunction.MyClass$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

/**
 * @final
 */
class MyClass extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {number} @nodts*/
  this.f_f__inlinefunction_MyClass_ = 0;
 }
 /** @nodts @return {!MyClass} */
 static $create__int(/** number */ f) {
  MyClass.$clinit();
  let $instance = new MyClass();
  $instance.$ctor__inlinefunction_MyClass__int__void(f);
  return $instance;
 }
 /** @nodts */
 $ctor__inlinefunction_MyClass__int__void(/** number */ f) {
  this.$ctor__java_lang_Object__void();
  this.f_f__inlinefunction_MyClass_ = f;
 }
 /** @final @nodts @return {number} */
 m_getF__int() {
  return this.f_f__inlinefunction_MyClass_;
 }
 /** @final @nodts */
 m_setF__int__void(/** number */ set__) {
  this.f_f__inlinefunction_MyClass_ = set__;
 }
 /** @final @nodts @return {number} */
 m_addAndReturn__int__int(/** number */ i) {
  this.m_setF__int__void(this.m_getF__int() + i | 0);
  return this.m_getF__int();
 }
 /** @nodts */
 static $clinit() {
  MyClass.$clinit = () =>{};
  MyClass.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof MyClass;
 }
 
 /** @nodts */
 static $loadModules() {}
}
$Util.$setClassMetadata(MyClass, 'inlinefunction.MyClass');

exports = MyClass;

//# sourceMappingURL=MyClass.js.map
