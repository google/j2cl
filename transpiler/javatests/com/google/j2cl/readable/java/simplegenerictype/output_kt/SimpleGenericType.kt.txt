// Generated from "simplegenerictype/SimpleGenericType.java"
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "INCOMPATIBLE_OBJC_NAME_OVERRIDE",
 "REDUNDANT_ELSE_IN_WHEN")

package simplegenerictype

import javaemul.lang.*
import kotlin.Any
import kotlin.Error
import kotlin.Suppress
import kotlin.jvm.JvmField

open class SimpleGenericType<T, S> {
 @JvmField
 var first: T

 @JvmField
 var second: S

 constructor(t: T, s: S) {
  this.first = t
  this.second = s
 }

 open fun test() {
  val g: SimpleGenericType<Any?, Error?> = SimpleGenericType<Any?, Error?>(
   Any(),
   java.lang.Error(),
  )
 }
}
