goog.module('jsconstructor.D$impl');

const B = goog.require('jsconstructor.B$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

/**
 * @final
 */
class D extends B {
 //JsConstructor 'D()'.
 
 constructor() {
  D.$clinit();
  super(9);
  /**@type {number} @nodts*/
  this.f_fD__jsconstructor_D_ = 0;
  this.$ctor__jsconstructor_D__void();
 }
 /** @final @nodts @return {number} */
 m_getFD__int() {
  return this.f_fD__jsconstructor_D_;
 }
 /** @final @nodts */
 m_setFD__int__void(/** number */ set__) {
  this.f_fD__jsconstructor_D_ = set__;
 }
 //Initialization from constructor 'D()'.
 /** @nodts */
 $ctor__jsconstructor_D__void() {
  this.f_fD__jsconstructor_D_ = 8;
  this.m_setFD__int__void(10);
 }
 //Factory method corresponding to constructor 'D(int)'.
 /** @nodts @return {!D} */
 static $create__int(/** number */ x) {
  D.$clinit();
  let $instance = new D();
  $instance.$ctor__jsconstructor_D__int__void(x);
  return $instance;
 }
 //Initialization from constructor 'D(int)'.
 /** @nodts */
 $ctor__jsconstructor_D__int__void(/** number */ x) {
  this.m_setFD__int__void(x);
 }
 /** @nodts */
 static $clinit() {
  D.$clinit = () =>{};
  D.$loadModules();
  B.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof D;
 }
 
 /** @nodts */
 static $loadModules() {}
}
$Util.$setClassMetadata(D, 'jsconstructor.D');

exports = D;

//# sourceMappingURL=D.js.map
