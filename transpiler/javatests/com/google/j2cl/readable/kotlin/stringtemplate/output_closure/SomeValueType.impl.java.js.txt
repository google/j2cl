goog.module('stringtemplate.SomeValueType$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Integer = goog.forwardDeclare('java.lang.Integer$impl');
let $Objects = goog.forwardDeclare('vmbootstrap.Objects$impl');

/**
 * @final
 */
class SomeValueType extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {number} @nodts*/
  this.f_i__stringtemplate_SomeValueType_ = 0;
 }
 /** @nodts @return {!SomeValueType} */
 static $create__int(/** number */ i) {
  SomeValueType.$clinit();
  let $instance = new SomeValueType();
  $instance.$ctor__stringtemplate_SomeValueType__int__void(i);
  return $instance;
 }
 /** @nodts */
 $ctor__stringtemplate_SomeValueType__int__void(/** number */ i) {
  this.$ctor__java_lang_Object__void();
  this.f_i__stringtemplate_SomeValueType_ = i;
 }
 /** @override @return {string} */
 toString() {
  return '' + 'SomeValueType(' + 'i=' + this.f_i__stringtemplate_SomeValueType_ + ')';
 }
 /** @override @return {number} */
 hashCode() {
  return $Objects.m_hashCode__java_lang_Object__int(Integer.valueOf(this.f_i__stringtemplate_SomeValueType_));
 }
 /** @override @return {boolean} */
 equals(/** * */ other) {
  if (!SomeValueType.$isInstance(other)) {
   return false;
  }
  let tmp0_other_with_cast = /**@type {!SomeValueType}*/ (other);
  if (this.f_i__stringtemplate_SomeValueType_ != tmp0_other_with_cast.f_i__stringtemplate_SomeValueType_) {
   return false;
  }
  return true;
 }
 /** @nodts */
 static $clinit() {
  SomeValueType.$clinit = () =>{};
  SomeValueType.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof SomeValueType;
 }
 
 /** @nodts */
 static $loadModules() {
  Integer = goog.module.get('java.lang.Integer$impl');
  $Objects = goog.module.get('vmbootstrap.Objects$impl');
 }
}
$Util.$setClassMetadata(SomeValueType, 'stringtemplate.SomeValueType');

exports = SomeValueType;

//# sourceMappingURL=SomeValueType.js.map
