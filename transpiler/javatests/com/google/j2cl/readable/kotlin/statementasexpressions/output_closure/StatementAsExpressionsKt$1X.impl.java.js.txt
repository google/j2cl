goog.module('statementasexpressions.StatementAsExpressionsKt.$1X$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

/**
 * @final
 */
class $1X extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {number} @nodts*/
  this.f_field__statementasexpressions_StatementAsExpressionsKt_1X_ = 0;
 }
 /** @nodts @return {!$1X} */
 static $create__int(/** number */ field) {
  $1X.$clinit();
  let $instance = new $1X();
  $instance.$ctor__statementasexpressions_StatementAsExpressionsKt_1X__int__void(field);
  return $instance;
 }
 /** @nodts */
 $ctor__statementasexpressions_StatementAsExpressionsKt_1X__int__void(/** number */ field) {
  this.$ctor__java_lang_Object__void();
  this.f_field__statementasexpressions_StatementAsExpressionsKt_1X_ = field;
 }
 /** @final @nodts @return {number} */
 m_getField__int() {
  return this.f_field__statementasexpressions_StatementAsExpressionsKt_1X_;
 }
 /** @final @nodts */
 m_setField__int__void(/** number */ set__) {
  this.f_field__statementasexpressions_StatementAsExpressionsKt_1X_ = set__;
 }
 /** @final @nodts */
 m_m__int__int__int__void(/** number */ a, /** number */ b, /** number */ c) {}
 /** @nodts */
 static $clinit() {
  $1X.$clinit = () =>{};
  $1X.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof $1X;
 }
 
 /** @nodts */
 static $loadModules() {}
}
$Util.$setClassMetadata($1X, 'statementasexpressions.StatementAsExpressionsKt$1X');

exports = $1X;

//# sourceMappingURL=StatementAsExpressionsKt$1X.js.map
