goog.module('bridgemethods.ReparametrerizedChild$impl');

const ParameterizedParent = goog.require('bridgemethods.ParameterizedParent$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');

/**
 * @template E
 * @extends {ParameterizedParent<E>}
 */
class ReparametrerizedChild extends ParameterizedParent {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @template E @return {!ReparametrerizedChild<E>} */
 static $create__() {
  ReparametrerizedChild.$clinit();
  let $instance = new ReparametrerizedChild();
  $instance.$ctor__bridgemethods_ReparametrerizedChild__void();
  return $instance;
 }
 /** @nodts */
 $ctor__bridgemethods_ReparametrerizedChild__void() {
  this.$ctor__bridgemethods_ParameterizedParent__void();
 }
 /** @nodts @template S @return {?S} */
 m_m__bridgemethods_ReparametrerizedChild__bridgemethods_ReparametrerizedChild(/** S */ t) {
  return null;
 }
 //Bridge method.
 /** @final @override @nodts @suppress{visibility} @template S @return {?S} */
 m_m__bridgemethods_ParameterizedParent__bridgemethods_ParameterizedParent(/** S */ arg0) {
  return this.m_m__bridgemethods_ReparametrerizedChild__bridgemethods_ReparametrerizedChild(/**@type {S}*/ ($Casts.$to(arg0, ReparametrerizedChild)));
 }
 /** @nodts */
 static $clinit() {
  ReparametrerizedChild.$clinit = () =>{};
  ReparametrerizedChild.$loadModules();
  ParameterizedParent.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof ReparametrerizedChild;
 }
 
 /** @nodts */
 static $loadModules() {
  $Casts = goog.module.get('vmbootstrap.Casts$impl');
 }
}
$Util.$setClassMetadata(ReparametrerizedChild, 'bridgemethods.ReparametrerizedChild');

exports = ReparametrerizedChild;

//# sourceMappingURL=ReparametrerizedChild.js.map
