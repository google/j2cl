goog.module('recordclass.RecordClass.StringRecord$impl');

const Record = goog.require('java.lang.Record$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Arrays = goog.forwardDeclare('java.util.Arrays$impl');
let $Equality = goog.forwardDeclare('nativebootstrap.Equality$impl');

/**
 * @final
 */
class StringRecord extends Record {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {?string} @nodts*/
  this.f_value__recordclass_RecordClass_StringRecord_;
 }
 /** @nodts @return {!StringRecord} */
 static $create__java_lang_String(/** ?string */ arg0) {
  StringRecord.$clinit();
  let $instance = new StringRecord();
  $instance.$ctor__recordclass_RecordClass_StringRecord__java_lang_String__void(arg0);
  return $instance;
 }
 /** @nodts */
 $ctor__recordclass_RecordClass_StringRecord__java_lang_String__void(/** ?string */ arg0) {
  this.$ctor__java_lang_Record__void();
  this.f_value__recordclass_RecordClass_StringRecord_ = arg0;
 }
 /** @nodts @return {?string} */
 m_value__java_lang_String() {
  return this.f_value__recordclass_RecordClass_StringRecord_;
 }
 /** @override @return {boolean} */
 equals(/** * */ arg0) {
  let /** StringRecord */ $other;
  if (!($other = StringRecord.$isInstance(arg0) ? /**@type {StringRecord}*/ (arg0) : null, !$Equality.$same($other, null))) {
   return false;
  }
  return Arrays.m_equals__arrayOf_java_lang_Object__arrayOf_java_lang_Object__boolean([this.f_value__recordclass_RecordClass_StringRecord_], [$other.f_value__recordclass_RecordClass_StringRecord_]);
 }
 /** @override @return {number} */
 hashCode() {
  return Arrays.m_hashCode__arrayOf_java_lang_Object__int([this.f_value__recordclass_RecordClass_StringRecord_]);
 }
 /** @override @return {?string} */
 toString() {
  return Arrays.m_toString__arrayOf_java_lang_Object__java_lang_String([this.f_value__recordclass_RecordClass_StringRecord_]);
 }
 /** @nodts */
 static $clinit() {
  StringRecord.$clinit = () =>{};
  StringRecord.$loadModules();
  Record.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof StringRecord;
 }
 
 /** @nodts */
 static $loadModules() {
  Arrays = goog.module.get('java.util.Arrays$impl');
  $Equality = goog.module.get('nativebootstrap.Equality$impl');
 }
}
$Util.$setClassMetadata(StringRecord, 'recordclass.RecordClass$StringRecord');

exports = StringRecord;

//# sourceMappingURL=RecordClass$StringRecord.js.map
