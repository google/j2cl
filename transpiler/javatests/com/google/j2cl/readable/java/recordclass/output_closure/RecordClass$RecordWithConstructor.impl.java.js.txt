goog.module('recordclass.RecordClass.RecordWithConstructor$impl');

const Record = goog.require('java.lang.Record$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Integer = goog.forwardDeclare('java.lang.Integer$impl');
let Arrays = goog.forwardDeclare('java.util.Arrays$impl');
let $Equality = goog.forwardDeclare('nativebootstrap.Equality$impl');

/**
 * @final
 */
class RecordWithConstructor extends Record {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {number} @nodts*/
  this.f_a__recordclass_RecordClass_RecordWithConstructor_ = 0;
  /**@type {number} @nodts*/
  this.f_b__recordclass_RecordClass_RecordWithConstructor_ = 0;
 }
 /** @nodts @return {!RecordWithConstructor} */
 static $create__int__int(/** number */ a, /** number */ b) {
  RecordWithConstructor.$clinit();
  let $instance = new RecordWithConstructor();
  $instance.$ctor__recordclass_RecordClass_RecordWithConstructor__int__int__void(a, b);
  return $instance;
 }
 /** @nodts */
 $ctor__recordclass_RecordClass_RecordWithConstructor__int__int__void(/** number */ a, /** number */ b) {
  this.$ctor__java_lang_Record__void();
  this.f_a__recordclass_RecordClass_RecordWithConstructor_ = a + 1 | 0;
  this.f_b__recordclass_RecordClass_RecordWithConstructor_ = b - 1 | 0;
 }
 /** @nodts @return {number} */
 m_a__int() {
  return this.f_a__recordclass_RecordClass_RecordWithConstructor_;
 }
 /** @nodts @return {number} */
 m_b__int() {
  return this.f_b__recordclass_RecordClass_RecordWithConstructor_;
 }
 /** @override @return {boolean} */
 equals(/** * */ arg0) {
  let /** RecordWithConstructor */ $other;
  if (!($other = RecordWithConstructor.$isInstance(arg0) ? /**@type {RecordWithConstructor}*/ (arg0) : null, !$Equality.$same($other, null))) {
   return false;
  }
  return Arrays.m_equals__arrayOf_java_lang_Object__arrayOf_java_lang_Object__boolean([Integer.valueOf(this.f_a__recordclass_RecordClass_RecordWithConstructor_), Integer.valueOf(this.f_b__recordclass_RecordClass_RecordWithConstructor_)], [Integer.valueOf($other.f_a__recordclass_RecordClass_RecordWithConstructor_), Integer.valueOf($other.f_b__recordclass_RecordClass_RecordWithConstructor_)]);
 }
 /** @override @return {number} */
 hashCode() {
  return Arrays.m_hashCode__arrayOf_java_lang_Object__int([Integer.valueOf(this.f_a__recordclass_RecordClass_RecordWithConstructor_), Integer.valueOf(this.f_b__recordclass_RecordClass_RecordWithConstructor_)]);
 }
 /** @override @return {?string} */
 toString() {
  return Arrays.m_toString__arrayOf_java_lang_Object__java_lang_String([Integer.valueOf(this.f_a__recordclass_RecordClass_RecordWithConstructor_), Integer.valueOf(this.f_b__recordclass_RecordClass_RecordWithConstructor_)]);
 }
 /** @nodts */
 static $clinit() {
  RecordWithConstructor.$clinit = () =>{};
  RecordWithConstructor.$loadModules();
  Record.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof RecordWithConstructor;
 }
 
 /** @nodts */
 static $loadModules() {
  Integer = goog.module.get('java.lang.Integer$impl');
  Arrays = goog.module.get('java.util.Arrays$impl');
  $Equality = goog.module.get('nativebootstrap.Equality$impl');
 }
}
$Util.$setClassMetadata(RecordWithConstructor, 'recordclass.RecordClass$RecordWithConstructor');

exports = RecordWithConstructor;

//# sourceMappingURL=RecordClass$RecordWithConstructor.js.map
