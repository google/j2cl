goog.module('subnativejstype.SubNativeJsType$impl');

const $Util = goog.require('nativebootstrap.Util$impl');
const MyNativeJsType = goog.require('test.foo.MyNativeJsType');

/**
 * @final
 */
class SubNativeJsType extends MyNativeJsType {
 //JsConstructor 'SubNativeJsType(int)'.
 
 constructor(/** number */ x) {
  SubNativeJsType.$clinit();
  super(x + 1 | 0);
  this.$ctor__subnativejstype_SubNativeJsType__int__void(x);
 }
 //Initialization from constructor 'SubNativeJsType(int)'.
 /** @nodts */
 $ctor__subnativejstype_SubNativeJsType__int__void(/** number */ x) {}
 //Factory method corresponding to constructor 'SubNativeJsType()'.
 /** @nodts @return {!SubNativeJsType} */
 static $create__() {
  SubNativeJsType.$clinit();
  let $instance = new SubNativeJsType(10);
  $instance.$ctor__subnativejstype_SubNativeJsType__void();
  return $instance;
 }
 //Initialization from constructor 'SubNativeJsType()'.
 /** @nodts */
 $ctor__subnativejstype_SubNativeJsType__void() {}
 /** @nodts */
 static $clinit() {
  SubNativeJsType.$clinit = () =>{};
  SubNativeJsType.$loadModules();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof SubNativeJsType;
 }
 
 /** @nodts */
 static $loadModules() {}
}
$Util.$setClassMetadata(SubNativeJsType, 'subnativejstype.SubNativeJsType');

exports = SubNativeJsType;

//# sourceMappingURL=SubNativeJsType.js.map
