goog.module('qualifiedsupercall.QualifiedSuperCall.InnerClass$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Parent = goog.forwardDeclare('qualifiedsupercall.Parent$impl');
let QualifiedSuperCall = goog.forwardDeclare('qualifiedsupercall.QualifiedSuperCall$impl');

/**
 * @final
 */
class InnerClass extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {!QualifiedSuperCall} @nodts*/
  this.$outer_this__qualifiedsupercall_QualifiedSuperCall_InnerClass;
 }
 /** @nodts @return {!InnerClass} */
 static $create__qualifiedsupercall_QualifiedSuperCall(/** !QualifiedSuperCall */ $outer_this) {
  InnerClass.$clinit();
  let $instance = new InnerClass();
  $instance.$ctor__qualifiedsupercall_QualifiedSuperCall_InnerClass__qualifiedsupercall_QualifiedSuperCall__void($outer_this);
  return $instance;
 }
 /** @nodts */
 $ctor__qualifiedsupercall_QualifiedSuperCall_InnerClass__qualifiedsupercall_QualifiedSuperCall__void(/** !QualifiedSuperCall */ $outer_this) {
  this.$outer_this__qualifiedsupercall_QualifiedSuperCall_InnerClass = $outer_this;
  this.$ctor__java_lang_Object__void();
 }
 /** @final @nodts */
 m_test__void() {
  Parent.prototype.m_f__void.call(this.$outer_this__qualifiedsupercall_QualifiedSuperCall_InnerClass);
 }
 /** @nodts */
 static $clinit() {
  InnerClass.$clinit = () =>{};
  InnerClass.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof InnerClass;
 }
 
 /** @nodts */
 static $loadModules() {
  Parent = goog.module.get('qualifiedsupercall.Parent$impl');
 }
}
$Util.$setClassMetadata(InnerClass, 'qualifiedsupercall.QualifiedSuperCall$InnerClass');

exports = InnerClass;

//# sourceMappingURL=QualifiedSuperCall$InnerClass.js.map
