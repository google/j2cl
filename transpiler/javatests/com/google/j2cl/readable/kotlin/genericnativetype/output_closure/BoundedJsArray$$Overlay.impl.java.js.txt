goog.module('genericnativetype.BoundedJsArray.$Overlay$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let InternalPreconditions = goog.forwardDeclare('javaemul.internal.InternalPreconditions$impl');

/** @nodts */
class $Overlay {
 /** @final @nodts @template V @return {!Array<V>} */
 static m_create__genericnativetype_BoundedJsArray() {
  $Overlay.$clinit();
  let /** ? */ array = null;
  return InternalPreconditions.m_checkNotNull__java_lang_Object__java_lang_Object(array);
 }
 /** @final @nodts @template V @return {!Array<V>} */
 static m_create__int__genericnativetype_BoundedJsArray(/** number */ size) {
  $Overlay.$clinit();
  let array = /**@type {!Array<?>}*/ (new Array(size));
  return array;
 }
 /** @nodts */
 static $clinit() {
  $Overlay.$clinit = () =>{};
  $Overlay.$loadModules();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof Array;
 }
 
 /** @nodts */
 static $loadModules() {
  InternalPreconditions = goog.module.get('javaemul.internal.InternalPreconditions$impl');
 }
}
$Util.$setClassMetadata($Overlay, 'Array');

exports = $Overlay;

//# sourceMappingURL=BoundedJsArray$$Overlay.js.map
