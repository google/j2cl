goog.module('typewildcards.TypeWildCards.A$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');
const X = goog.require('typewildcards.TypeWildCards.X$impl');

/**
 * @implements {X}
 */
class A extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {number} @nodts*/
  this.f_f__typewildcards_TypeWildCards_A_ = 0;
 }
 /** @nodts @return {!A} */
 static $create__() {
  A.$clinit();
  let $instance = new A();
  $instance.$ctor__typewildcards_TypeWildCards_A__void();
  return $instance;
 }
 /** @nodts */
 $ctor__typewildcards_TypeWildCards_A__void() {
  this.$ctor__java_lang_Object__void();
 }
 /** @final @nodts @return {number} */
 m_getF__int() {
  return this.f_f__typewildcards_TypeWildCards_A_;
 }
 /** @final @nodts */
 m_setF__int__void(/** number */ set__) {
  this.f_f__typewildcards_TypeWildCards_A_ = set__;
 }
 /** @override @nodts */
 m_m__void() {}
 /** @nodts */
 static $clinit() {
  A.$clinit = () =>{};
  A.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof A;
 }
 
 /** @nodts */
 static $loadModules() {}
}
X.$markImplementor(A);
$Util.$setClassMetadata(A, 'typewildcards.TypeWildCards$A');

exports = A;

//# sourceMappingURL=TypeWildCards$A.js.map
