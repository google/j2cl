goog.module('genericmethod.GenericMethod.$1LocalClass$impl');

const GenericMethod = goog.require('genericmethod.GenericMethod$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Error = goog.forwardDeclare('java.lang.Error$impl');
let Number = goog.forwardDeclare('java.lang.Number$impl');

/**
 * @template T, T_1, T_2
 * @extends {GenericMethod<T>}
 */
class $1LocalClass extends GenericMethod {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {!GenericMethod<T_2>} @nodts*/
  this.$outer_this__genericmethod_GenericMethod_1LocalClass;
 }
 /** @nodts @template T, T_1, T_2 @return {!$1LocalClass<T, T_1, T_2>} */
 static $create__genericmethod_GenericMethod(/** !GenericMethod<T_2> */ $outer_this) {
  $1LocalClass.$clinit();
  let $instance = new $1LocalClass();
  $instance.$ctor__genericmethod_GenericMethod_1LocalClass__genericmethod_GenericMethod__void($outer_this);
  return $instance;
 }
 /** @nodts */
 $ctor__genericmethod_GenericMethod_1LocalClass__genericmethod_GenericMethod__void(/** !GenericMethod<T_2> */ $outer_this) {
  this.$outer_this__genericmethod_GenericMethod_1LocalClass = $outer_this;
  this.$ctor__genericmethod_GenericMethod__void();
 }
 /** @nodts */
 m_fun2__java_lang_Object__void(/** T */ t) {}
 /** @nodts @template T_3 */
 m_fun2__java_lang_Number__void(/** T_3 */ t) {}
 /** @nodts */
 static $clinit() {
  $1LocalClass.$clinit = () =>{};
  $1LocalClass.$loadModules();
  GenericMethod.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof $1LocalClass;
 }
 
 /** @nodts */
 static $loadModules() {}
}
$Util.$setClassMetadata($1LocalClass, 'genericmethod.GenericMethod$1LocalClass');

exports = $1LocalClass;

//# sourceMappingURL=GenericMethod$1LocalClass.js.map
