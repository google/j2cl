goog.module('properties.Implementor$impl');

const $Util = goog.require('nativebootstrap.Util$impl');
const Base = goog.require('properties.Base$impl');
const Holder = goog.require('properties.Holder$impl');
const NumberHolder = goog.require('properties.NumberHolder$impl');

let Integer = goog.forwardDeclare('java.lang.Integer$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');

/**
 * @final
 * @implements {Holder<!Integer>}
 * @implements {NumberHolder<!Integer>}
 */
class Implementor extends Base {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @return {!Implementor} */
 static $create__() {
  Implementor.$clinit();
  let $instance = new Implementor();
  $instance.$ctor__properties_Implementor__void();
  return $instance;
 }
 /** @nodts */
 $ctor__properties_Implementor__void() {
  this.$ctor__properties_Base__void();
 }
 //Bridge method.
 /** @final @override @nodts @suppress{visibility} @return {!Integer} */
 m_getContent__java_lang_Object() {
  return Integer.m_valueOf__int__java_lang_Integer(this.m_getContent__int());
 }
 //Bridge method.
 /** @final @override @nodts @suppress{visibility} */
 m_setContent__java_lang_Object__void(/** !Integer */ arg0) {
  this.m_setContent__int__void((/**@type {!Integer}*/ ($Casts.$to(arg0, Integer))).m_intValue__int());
 }
 //Bridge method.
 /** @final @override @nodts @suppress{visibility} @return {!Integer} */
 m_getContent__java_lang_Number() {
  return Integer.m_valueOf__int__java_lang_Integer(this.m_getContent__int());
 }
 //Bridge method.
 /** @final @override @nodts @suppress{visibility} */
 m_setContent__java_lang_Number__void(/** !Integer */ arg0) {
  this.m_setContent__int__void((/**@type {!Integer}*/ ($Casts.$to(arg0, Integer))).m_intValue__int());
 }
 /** @nodts */
 static $clinit() {
  Implementor.$clinit = () =>{};
  Implementor.$loadModules();
  Base.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof Implementor;
 }
 
 /** @nodts */
 static $loadModules() {
  Integer = goog.module.get('java.lang.Integer$impl');
  $Casts = goog.module.get('vmbootstrap.Casts$impl');
 }
}
Holder.$markImplementor(Implementor);
NumberHolder.$markImplementor(Implementor);
$Util.$setClassMetadata(Implementor, 'properties.Implementor');

exports = Implementor;

//# sourceMappingURL=Implementor.js.map
