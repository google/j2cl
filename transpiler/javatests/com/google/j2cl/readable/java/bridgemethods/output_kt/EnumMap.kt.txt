// Generated from "bridgemethods/EnumMap.java"
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "INCOMPATIBLE_OBJC_NAME_OVERRIDE",
 "REDUNDANT_ELSE_IN_WHEN")

package bridgemethods

import javaemul.lang.*
import kotlin.Enum
import kotlin.Suppress

fun interface Map<K, V> {
 fun put(key: K, value: V): V
}

open class AbstractMap<K, V> internal constructor(): Map<K, V> {
 override fun put(key: K, value: V): V {
  return value
 }
}

open class EnumMap<K: Enum<K>, V>: AbstractMap<K, V>() {
 override fun put(key: K, value: V): V {
  return value
 }
}
