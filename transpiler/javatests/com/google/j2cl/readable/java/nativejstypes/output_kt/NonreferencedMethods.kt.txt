// Generated from "nativejstypes/NonreferencedMethods.java"
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "INCOMPATIBLE_OBJC_NAME_OVERRIDE",
 "REDUNDANT_ELSE_IN_WHEN")

package nativejstypes

import javaemul.lang.*
import jsinterop.annotations.JsType
import kotlin.Int
import kotlin.Suppress
import kotlin.jvm.JvmField
import kotlin.jvm.JvmStatic

open class NonreferencedMethods {
 @JsType(name = "NativeNonreferencedMethods", namespace = "nativejstypes", isNative = true)
 open class NativePrivateMembersOnPublicClass {
  private var x: Int = 0

  private constructor(x: Int)

  private external fun getInstance1(): Int

  companion object {
   private var s: Int = 0

   @JvmStatic
   private external fun getStatic(): Int
  }
 }

 @JsType(name = "NativeNonreferencedMethods", namespace = "nativejstypes", isNative = true)
 open class NativeMembersOnPrivateClass {
  constructor(x: Int)

  external open fun getInstance2(): Int

  companion object {
   @JvmField
   var s: Int = 0

   @JvmStatic
   external fun getStatic(): Int
  }
 }
}
