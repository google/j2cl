goog.module('typewildcards.TypeWildCards.Foo$impl');

const $Util = goog.require('nativebootstrap.Util$impl');
const GenericType = goog.require('typewildcards.GenericType$impl');

let TypeWildCards = goog.forwardDeclare('typewildcards.TypeWildCards$impl');

/**
 * @final
 * @extends {GenericType<!Foo>}
 */
class Foo extends GenericType {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {!TypeWildCards} @nodts*/
  this.$outer_this__typewildcards_TypeWildCards_Foo;
 }
 /** @nodts @return {!Foo} */
 static $create__typewildcards_TypeWildCards(/** !TypeWildCards */ $outer_this) {
  Foo.$clinit();
  let $instance = new Foo();
  $instance.$ctor__typewildcards_TypeWildCards_Foo__typewildcards_TypeWildCards__void($outer_this);
  return $instance;
 }
 /** @nodts */
 $ctor__typewildcards_TypeWildCards_Foo__typewildcards_TypeWildCards__void(/** !TypeWildCards */ $outer_this) {
  this.$outer_this__typewildcards_TypeWildCards_Foo = $outer_this;
  this.$ctor__typewildcards_GenericType__java_lang_Object__void(Foo.$create__typewildcards_TypeWildCards($outer_this));
 }
 /** @nodts */
 static $clinit() {
  Foo.$clinit = () =>{};
  Foo.$loadModules();
  GenericType.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof Foo;
 }
 
 /** @nodts */
 static $loadModules() {}
}
$Util.$setClassMetadata(Foo, 'typewildcards.TypeWildCards$Foo');

exports = Foo;

//# sourceMappingURL=TypeWildCards$Foo.js.map
