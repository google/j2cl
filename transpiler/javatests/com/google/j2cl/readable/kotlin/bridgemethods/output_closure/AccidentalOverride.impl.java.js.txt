goog.module('bridgemethods.AccidentalOverride$impl');

const A = goog.require('bridgemethods.A$impl');
const SpecializedInterface = goog.require('bridgemethods.SpecializedInterface$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let j_l_String = goog.forwardDeclare('java.lang.String$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');

/**
 * @final
 * @extends {A<?string, ?string>}
 * @implements {SpecializedInterface}
 */
class AccidentalOverride extends A {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @return {!AccidentalOverride} */
 static $create__() {
  AccidentalOverride.$clinit();
  let $instance = new AccidentalOverride();
  $instance.$ctor__bridgemethods_AccidentalOverride__void();
  return $instance;
 }
 /** @nodts */
 $ctor__bridgemethods_AccidentalOverride__void() {
  this.$ctor__bridgemethods_A__void();
 }
 //Specialized bridge method.
 /** @override @nodts @suppress{visibility} @return {?string} */
 m_fun__java_lang_String__java_lang_String(/** ?string */ arg0) {
  return /**@type {?string}*/ ($Casts.$to(super.m_fun__java_lang_Object__java_lang_Object(arg0), j_l_String));
 }
 //Bridge method.
 /** @final @override @nodts @suppress{visibility} @return {?string} */
 m_get__java_lang_String() {
  return /**@type {?string}*/ ($Casts.$to(this.m_get__java_lang_Object(), j_l_String));
 }
 /** @nodts */
 static $clinit() {
  AccidentalOverride.$clinit = () =>{};
  AccidentalOverride.$loadModules();
  A.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof AccidentalOverride;
 }
 
 /** @nodts */
 static $loadModules() {
  j_l_String = goog.module.get('java.lang.String$impl');
  $Casts = goog.module.get('vmbootstrap.Casts$impl');
 }
}
SpecializedInterface.$markImplementor(AccidentalOverride);
$Util.$setClassMetadata(AccidentalOverride, 'bridgemethods.AccidentalOverride');

exports = AccidentalOverride;

//# sourceMappingURL=AccidentalOverride.js.map
