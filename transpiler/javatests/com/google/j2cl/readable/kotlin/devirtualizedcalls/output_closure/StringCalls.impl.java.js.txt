goog.module('devirtualizedcalls.StringCalls$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let CharSequence = goog.forwardDeclare('java.lang.CharSequence$impl');
let j_l_String = goog.forwardDeclare('java.lang.String$impl');
let InternalPreconditions = goog.forwardDeclare('javaemul.internal.InternalPreconditions$impl');
let StringsKt = goog.forwardDeclare('kotlin.text.StringsKt$impl');
let $Objects = goog.forwardDeclare('vmbootstrap.Objects$impl');

/**
 * @final
 */
class StringCalls extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @return {!StringCalls} */
 static $create__() {
  StringCalls.$clinit();
  let $instance = new StringCalls();
  $instance.$ctor__devirtualizedcalls_StringCalls__void();
  return $instance;
 }
 /** @nodts */
 $ctor__devirtualizedcalls_StringCalls__void() {
  this.$ctor__java_lang_Object__void();
 }
 /** @final @nodts */
 m_main__void() {
  let literal = 'String';
  let sub = InternalPreconditions.m_checkNotNull__java_lang_Object__java_lang_Object(j_l_String.m_substring__java_lang_String__int__java_lang_String(/**@type {string}*/ (literal), 1));
  let sub2 = InternalPreconditions.m_checkNotNull__java_lang_Object__java_lang_Object(j_l_String.m_substring__java_lang_String__int__int__java_lang_String(/**@type {string}*/ (literal), 2, 3));
  let trimmed = $Objects.m_toString__java_lang_Object__java_lang_String(StringsKt.m_trim__java_lang_CharSequence__java_lang_CharSequence(/**@type {!(CharSequence|string)}*/ (literal)));
  let newString = literal;
 }
 /** @nodts */
 static $clinit() {
  StringCalls.$clinit = () =>{};
  StringCalls.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof StringCalls;
 }
 
 /** @nodts */
 static $loadModules() {
  j_l_String = goog.module.get('java.lang.String$impl');
  InternalPreconditions = goog.module.get('javaemul.internal.InternalPreconditions$impl');
  StringsKt = goog.module.get('kotlin.text.StringsKt$impl');
  $Objects = goog.module.get('vmbootstrap.Objects$impl');
 }
}
$Util.$setClassMetadata(StringCalls, 'devirtualizedcalls.StringCalls');

exports = StringCalls;

//# sourceMappingURL=StringCalls.js.map
