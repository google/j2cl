// Generated from "j2kt/AnonymousClassWithNullableTypeArgument.java"
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "REDUNDANT_ELSE_IN_WHEN")

package j2kt

import javaemul.lang.*
import kotlin.Any
import kotlin.Suppress
import kotlin.jvm.JvmStatic

open class AnonymousClassWithNullableTypeArgument {
 companion object {
  @JvmStatic
  internal fun fooExplicitTypeArguments_pp_j2kt(): Foo<Any?> {
   return object : Foo<Any?> {
    override fun get(): Any? {
     return null
    }
   }
  }

  @JvmStatic
  internal fun fooImplicitTypeArguments_pp_j2kt(): Foo<Any?> {
   return object : Foo<Any?> {
    override fun get(): Any? {
     return null
    }
   }
  }
 }

 fun interface Foo<V> {
  fun get(): V
 }
}
