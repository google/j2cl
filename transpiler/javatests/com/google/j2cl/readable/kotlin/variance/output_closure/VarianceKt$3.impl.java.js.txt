goog.module('variance.VarianceKt.$3$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');
const Bounded = goog.require('variance.Bounded$impl');

let j_l_String = goog.forwardDeclare('java.lang.String$impl');
let Container = goog.forwardDeclare('variance.Container$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');

/**
 * @final
 * @implements {Bounded<string>}
 */
class $3 extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @return {!$3} */
 static $create__() {
  $3.$clinit();
  let $instance = new $3();
  $instance.$ctor__variance_VarianceKt_3__void();
  return $instance;
 }
 /** @nodts */
 $ctor__variance_VarianceKt_3__void() {
  this.$ctor__java_lang_Object__void();
 }
 /** @nodts @return {string} */
 m_m__java_lang_String__java_lang_String(/** string */ t) {
  return t;
 }
 /** @override @nodts @return {!Container<string>} */
 m_mList__variance_Container__variance_Container(/** !Container<string> */ c) {
  return c;
 }
 //Bridge method.
 /** @final @override @nodts @suppress{visibility} @return {string} */
 m_m__java_lang_CharSequence__java_lang_CharSequence(/** string */ arg0) {
  return this.m_m__java_lang_String__java_lang_String(/**@type {string}*/ ($Casts.$to(arg0, j_l_String)));
 }
 /** @nodts */
 static $clinit() {
  $3.$clinit = () =>{};
  $3.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof $3;
 }
 
 /** @nodts */
 static $loadModules() {
  j_l_String = goog.module.get('java.lang.String$impl');
  $Casts = goog.module.get('vmbootstrap.Casts$impl');
 }
}
Bounded.$markImplementor($3);
$Util.$setClassMetadata($3, 'variance.VarianceKt$3');

exports = $3;

//# sourceMappingURL=VarianceKt$3.js.map
